(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{444:function(e,_,s){"use strict";s.r(_);var n=s(2),a=Object(n.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("p",[_("code",[e._v("ES(8.1)")]),e._v("认证考题大纲参考如下")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("https://mp.weixin.qq.com/s/x7lMmMAo2563JysMJ8vgRQ\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("今天是我们学习"),_("code",[e._v("ES8.1")]),e._v("官方搜索工程师的第一课，首先第一个问题就是"),_("strong",[e._v("根据给定的需求创建一个索引")]),e._v("，本篇文章将采用如下（总分总）的形式分析该题目，第一部分先进行考题的分析，猜测要考的知识点大概有什么，然后第二部分对该题目涉及的知识点进行分析讲解，每一个考点后都跟着简单的解读，最后模拟汇总该考题，最终实现熟练掌握该题目。后续本类型文章如不特殊说明均使用该种方式进行讲解，如果有好的建议欢迎留在评论区讨论")]),e._v(" "),_("p",[e._v("本文结构如下：")]),e._v(" "),_("p",[e._v("1、题目分析（总）")]),e._v(" "),_("p",[e._v("2、题目拆解知识点（分）")]),e._v(" "),_("p",[e._v("3、总结（模拟出题考试，总）")]),e._v(" "),_("p",[e._v("下面进入第一部分，题目分析阶段")]),e._v(" "),_("h1",{attrs:{id:"一、题目分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、题目分析"}},[e._v("#")]),e._v(" 一、题目分析")]),e._v(" "),_("p",[_("strong",[e._v("题目：根据给定的需求创建一个索引")])]),e._v(" "),_("p",[e._v("**解读：**首先我在看到这个题目的第一感觉就是这个题目很简单，不就是创建个索引吗，最多就是设置几个主分片，几个副本分片，稍微再深点就是字段类型、自定义分词器、索引别名，看着好像很简单，其实实际操作起来还是有一定难度的，不过考试过程中能够查阅官网，所以我们只要熟记考点官网位置即可，下面我就该题目涉及到的（索引设置，字段映射类型，文本分析）这三点进行分析")]),e._v(" "),_("p",[e._v("通过阅读本文，你可以获得什么？")]),e._v(" "),_("p",[e._v("1、定义一个索引常用的配置项有哪些")]),e._v(" "),_("p",[e._v("2、自定义字段映射与动态字段映射")]),e._v(" "),_("p",[e._v("3、如何设置字段的数据类型")]),e._v(" "),_("p",[e._v("4、文本分析中 "),_("code",[e._v("Tokenizer")]),e._v("、"),_("code",[e._v("Token filter")]),e._v("、"),_("code",[e._v("Character filters")]),e._v("各自发挥什么作用以及如何设置")]),e._v(" "),_("p",[e._v("5、定义一个指定分片数量的索引，包含自定义分词器，自定义字段映射")]),e._v(" "),_("h1",{attrs:{id:"二、题目拆解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、题目拆解"}},[e._v("#")]),e._v(" 二、题目拆解")]),e._v(" "),_("h2",{attrs:{id:"_2-1、索引设置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1、索引设置"}},[e._v("#")]),e._v(" 2.1、索引设置")]),e._v(" "),_("h3",{attrs:{id:"_2-1-1、静态索引设置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1、静态索引设置"}},[e._v("#")]),e._v(" 2.1.1、静态索引设置")]),e._v(" "),_("p",[e._v("静态索引设置是只能在索引创建时或者索引关闭时使用的")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("index.number_of_shards")])]),e._v(" "),_("p",[e._v("索引主分片数量设置，默认1，只能在索引创建时设置，索引关闭时不能修改此选项")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.number_of_routing_shards")])]),e._v(" "),_("p",[e._v("与"),_("code",[e._v("index.number_of_shards")]),e._v("一起使用的整数值，文档路由到主分片的分片数")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.codec")])]),e._v(" "),_("p",[e._v("压缩存储数据策略选择，默认"),_("code",[e._v("LZ4")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.routing_partition_size")])]),e._v(" "),_("p",[e._v("路由可以到达的分片数，默认1，只能在索引创建时设置，这个值必须小于"),_("code",[e._v("index.number_of_shards")]),e._v("，除非"),_("code",[e._v("index.number_of_shards")]),e._v("的值也是1")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.soft_deletes.enabled")])]),e._v(" "),_("p",[e._v("索引软删除开关，只能在创建索引时进行配置，默认"),_("code",[e._v("true")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.soft_deletes.retention_lease.period")])]),e._v(" "),_("p",[e._v("软删除记录保留最长期限策略，默认值"),_("code",[e._v("12h")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.load_fixed_bitset_filters_eagerly")])]),e._v(" "),_("p",[e._v("嵌套查询预加载缓存过滤器，默认"),_("code",[e._v("true")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.shard.check_on_startup")])]),e._v(" "),_("p",[e._v("分片打开时是否对分片进行检查的开关。默认"),_("code",[e._v("false")]),e._v("，还有"),_("code",[e._v("true")]),e._v(","),_("code",[e._v("checksum")]),e._v("，除非特别精通各配置项含义，否则不建议更改")])])]),e._v(" "),_("h3",{attrs:{id:"_2-1-2、动态索引设置"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2、动态索引设置"}},[e._v("#")]),e._v(" 2.1.2、动态索引设置")]),e._v(" "),_("p",[e._v("动态索引设置是可以使用"),_("code",[e._v("update-index-settings")]),e._v(" API在激活的索引上来动态设置")]),e._v(" "),_("p",[e._v("更改关闭掉的静态或者动态索引设置可能导致不正确的设置，如果不删除或者重建索引，则无法更正这些错误设置")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("index.number_of_replicas")])]),e._v(" "),_("p",[e._v("副本分片数量设置，默认为1")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.auto_expand_replicas")])]),e._v(" "),_("p",[e._v("根据集群中数据节点的数量自动展开的副本数量，默认"),_("code",[e._v("false")]),e._v("关闭")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.search.idle.after")])]),e._v(" "),_("p",[e._v("分片多久没有请求或搜索会被认为是空闲的分片,默认"),_("code",[e._v("30s")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.refresh_interval")])]),e._v(" "),_("p",[e._v("执行refresh的间隔，默认"),_("code",[e._v("1s")]),e._v(",可以设置"),_("code",[e._v("-1")]),e._v("来禁用")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_result_window")])]),e._v(" "),_("p",[e._v("es搜索结果返回的最大记录数量(from+size)，默认"),_("code",[e._v("10000")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_inner_result_window")])]),e._v(" "),_("p",[e._v("es搜索结果中聚合桶返回的最大数量，默认"),_("code",[e._v("100")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_rescore_window")])]),e._v(" "),_("p",[_("code",[e._v("Rescore")]),e._v(" 请求的返回记录最大值，默认"),_("code",[e._v("10000")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_docvalue_fields_search")])]),e._v(" "),_("p",[e._v("查询请求中对"),_("code",[e._v("docvalue_fields")]),e._v("数量的限制，默认"),_("code",[e._v("100")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Index.max_script_fields")])]),e._v(" "),_("p",[e._v("查询请求中允许的"),_("code",[e._v("script_fields")]),e._v("的数量最大值，默认"),_("code",[e._v("32")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Index.max_ngram_diff")])]),e._v(" "),_("p",[_("code",[e._v("NGramTokenizer")]),e._v(" 和"),_("code",[e._v("NGramTokenFilter")]),e._v(" 之间"),_("code",[e._v("min_gram")]),e._v("与"),_("code",[e._v("max_gram")]),e._v("之间的"),_("strong",[e._v("最大差异值")]),e._v("，默认"),_("code",[e._v("1")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_shingle_diff")])]),e._v(" "),_("p",[_("code",[e._v("shingle token filter")]),e._v(" 中"),_("code",[e._v("max_shingle_size")]),e._v("与"),_("code",[e._v("min_shingle_size")]),e._v("最大差值，默认"),_("code",[e._v("3")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_refresh_listeners")])]),e._v(" "),_("p",[e._v("索引分片上最大的监听器数量，实现了"),_("code",[e._v("refresh=wait_for")]),e._v("的监听器")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.analyze.max_token_count")])]),e._v(" "),_("p",[e._v("使用analyze api 获取最大的token数量，默认"),_("code",[e._v("10000")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.highlight.max_analyzed_offset")])]),e._v(" "),_("p",[e._v("高亮显示时设置的最大字符数，默认"),_("code",[e._v("1000000")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_terms_count")])]),e._v(" "),_("p",[_("code",[e._v("Term")]),e._v(" 查询中"),_("code",[e._v("term")]),e._v("的最大的数量，默认"),_("code",[e._v("65536")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.max_regex_length")])]),e._v(" "),_("p",[e._v("正则查询中表达式的最大长度，默认"),_("code",[e._v("1000")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.query.default_field")])]),e._v(" "),_("p",[e._v("查询语句中查询的字段设置，默认"),_("code",[e._v("*")]),e._v(",查询除了元数据之外的所有字段")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.routing.allocation.enable")])]),e._v(" "),_("p",[e._v("控制索引分片分配")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("all")]),e._v(" 允许所有分片分配(默认)")]),e._v(" "),_("li",[_("code",[e._v("primaries")]),e._v(" 只允许主分片分配")]),e._v(" "),_("li",[_("code",[e._v("new_primaries")]),e._v(" 只允许新创建的主分片分配")]),e._v(" "),_("li",[_("code",[e._v("none")]),e._v(" 不允许分片分配")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.routing.rebalance.enable")])]),e._v(" "),_("p",[e._v("控制索引分片重新平衡")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("all")]),e._v(" 允许所有分片重新平衡（默认）")]),e._v(" "),_("li",[_("code",[e._v("primaries")]),e._v(" 允许主分片重新平衡")]),e._v(" "),_("li",[_("code",[e._v("replicas")]),e._v(" 运行副本分片重新平衡")]),e._v(" "),_("li",[_("code",[e._v("none")]),e._v(" 不允许分片重新平衡")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.gc_deletes")])]),e._v(" "),_("p",[e._v("已删除文档的历史版本号可被用于版本化操作的间隔，默认"),_("code",[e._v("60s")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.default_pipeline")])]),e._v(" "),_("p",[e._v("设置索引默认的"),_("code",[e._v("ingest pipeline")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.final_pipeline")])]),e._v(" "),_("p",[e._v("索引最终的"),_("code",[e._v("final ingest pipeline")]),e._v("，所有的请求都会走，如果该管道不存在，请求将会失败")]),e._v(" "),_("p",[e._v("不能使用"),_("code",[e._v("final ingest pipeline")]),e._v(" 修改"),_("code",[e._v("_index")]),e._v("字段，如果使用"),_("code",[e._v("final ingest pipeline")]),e._v(" 修改"),_("code",[e._v("_index")]),e._v("字段，该请求将失败")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.hidden")])]),e._v(" "),_("p",[e._v("索引是否隐藏，默认 不返回隐藏的索引，请求时也可以使用参数"),_("code",[e._v("expand_wildcards")]),e._v(" 控制，默认"),_("code",[e._v("false")])])])]),e._v(" "),_("h2",{attrs:{id:"_2-2、映射"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2、映射"}},[e._v("#")]),e._v(" 2.2、映射")]),e._v(" "),_("p",[e._v("映射在我们的使用中有动态映射、动态映射模版、显式设置映射三块。动态映射也就是我们不需要使用显式的设置字段类型，由"),_("code",[e._v("Elasticsearch")]),e._v("来进行推测类型生成映射；动态映射模版就是介于中间的一种，意思是我们提前设置好映射关系，并定一个模版名称、匹配规则，在进行索引插入数据的时候，根据匹配规则找到符合条件的动态模版，根据模版中的显式设置来生成索引；显式设置映射关系就是对索引中的每个字段都固定类型，无需进行类型推测。下面我们就以这三个方面深入的看下字段映射关系如何设置，在看字段映射如何设置之前先来了解一下"),_("code",[e._v("Elasticsearch")]),e._v("中的数据类型都支持哪些？")]),e._v(" "),_("h3",{attrs:{id:"_2-2-1、支持的数据类型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1、支持的数据类型"}},[e._v("#")]),e._v(" 2.2.1、支持的数据类型")]),e._v(" "),_("p",[e._v("本文数据类型只介绍下工作中经常使用的，个别的数据类型参考《根据给定需求创建索引进阶篇》，后续推出都会有的，全都会有的")]),e._v(" "),_("p",[e._v("本文数据类型只介绍下工作中经常使用的，个别的数据类型参考《根据给定需求创建索引进阶篇》，后续推出都会有的，全都会有的")]),e._v(" "),_("p",[e._v("本文数据类型只介绍下工作中经常使用的，个别的数据类型参考《根据给定需求创建索引进阶篇》，后续推出都会有的，全都会有的")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("聚合字段类型")]),e._v(" "),_("p",[e._v("类型设置为"),_("code",[e._v("aggregate_metric_double")]),e._v("作为一个对象，子字段可以有"),_("code",[e._v("min")]),e._v(","),_("code",[e._v("max")]),e._v(","),_("code",[e._v("sum")]),e._v(","),_("code",[e._v("value_count")]),e._v(",当我们对字段设置为"),_("code",[e._v("aggregate_metric_double")]),e._v("字段做聚合时，它能够直接使用子字段的值进行聚合，比如最大值就可以直接去子对象中"),_("code",[e._v("max")]),e._v("的值比较，详情可参考如下文章")]),e._v(" "),_("p",[e._v("https://mp.weixin.qq.com/s/erLmbgMA9mMrytSAQ9Bt3Q")])]),e._v(" "),_("li",[_("p",[e._v("字段别名类型")]),e._v(" "),_("p",[e._v("举例一个实用的例子，我们在做es中数据汇总的时候有这么一个统计,统计log.level为info级别的日志，但是因为数据源来自各个渠道，无法都满足ECS(Elastic Common Schema),所以我们可以使用字段别名，比如索引1中对应的统计字段是log.level.keyword,索引2对应的是level.keyword,但是mapping又无法进行修改来完成，所以我们创建一个字段别名log.level对应log.level.keyword,索引二中对应level.keyword,我们统计时只需要对lov.level统计即可了")]),e._v(" "),_("p",[e._v("我们知道索引可以起一个别名，字段也可以起一个别名，做搜索、聚合、排序的时候直接使用"),_("strong",[e._v("字段别名")]),e._v("进行查询、聚合和排序，下面是本人对字段别名的一个深度学习，参考如下：")]),e._v(" "),_("blockquote",[_("p",[e._v("https://mp.weixin.qq.com/s/YMm-CedHtPnY6MIvGE1X9g")])])]),e._v(" "),_("li",[_("p",[e._v("数组字段")]),e._v(" "),_("p",[e._v("数组字段没有固定的类型，但是数组中的所有元素类型必须一致，数组里可以包含零个或多个元素，如果为空，则是代表这个数组是没有值的字段")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("binary")])]),e._v(" "),_("p",[e._v("二进制类型，默认该类型字段不可以被搜索，也不存储")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Boolean")])]),e._v(" "),_("p",[e._v("接收"),_("code",[e._v("true")]),e._v("和"),_("code",[e._v("false")]),e._v("或者可以解析为"),_("code",[e._v("true")]),e._v("和"),_("code",[e._v("false")]),e._v("的字符串"),_("code",[e._v("”true“")]),e._v("和"),_("code",[e._v('"false"')]),e._v("和空字符串"),_("code",[e._v('""')])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Date")])]),e._v(" "),_("p",[e._v("时间类型，可以是"),_("code",[e._v("2022-08-01")]),e._v("或者"),_("code",[e._v("2022-08-01 12:00:00")]),e._v(",也可以是一个秒数或者毫秒数，时间格式可以自定义格式，如果不添加使用默认格式"),_("code",[e._v('"strict_date_optional_time||epoch_millis"')]),e._v("，使用时间类型字段排序时会自动转换为时间戳毫秒数进行排序")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Date nano")])]),e._v(" "),_("p",[_("code",[e._v("Date")]),e._v("类型的补充字段，纳秒存储")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Geo")])]),e._v(" "),_("p",[e._v("描述地理位置信息的字段数据类型，因为知识点较多，详细信息可参考另一篇文章，通俗解读了"),_("code",[e._v("geo_point")]),e._v("与"),_("code",[e._v("geo_shape")]),e._v("两种类型的数据，如果查询，聚合，排序等")]),e._v(" "),_("blockquote",[_("p",[e._v("https://mp.weixin.qq.com/s/nw2_M8icS3v94w4sfrbqaw")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Ip")])]),e._v(" "),_("p",[e._v("保存网络地址信息，支持"),_("code",[e._v("ipv4")]),e._v("和"),_("code",[e._v("ipv6")]),e._v("类型的存储与检索，详细可查看官网")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Join")])]),e._v(" "),_("p",[e._v("对于"),_("code",[e._v("Join")]),e._v("类型，不是很常用，但是也有使用，常用的我单独摘出来写了一篇文章，不常用或者比较简单常见的就简单一句话概括了，这个"),_("code",[e._v("Join")]),e._v("就在下面大概说说吧，首先还是先创建一个索引")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT my-index-000001\n{\n  "mappings": {\n    "properties": {\n      "my_id": {\n        "type": "keyword"\n      },\n      "my_join_field": { \n        "type": "join",\n        "relations": {\n          "user": "hobby" \n        }\n      }\n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br")])]),_("p",[e._v("如上索引，父子文档，指定一个人的爱好，一个人可以有多个爱好，所以创建索引时指定父子关系字段类型，指定"),_("code",[e._v("user")]),e._v("的子类为"),_("code",[e._v("hobby")]),e._v("，每条文档都有一个名称（"),_("code",[e._v("父文档或子文档")]),e._v("），以上图创建的索引为例，每个文档都要指定这是个"),_("code",[e._v("user")]),e._v("还是个"),_("code",[e._v("hobby")]),e._v("，如下，"),_("code",[e._v("文档1")]),e._v("是父文档"),_("code",[e._v("张三")]),e._v("用户，"),_("code",[e._v("文档2")]),e._v("是父文档"),_("code",[e._v("李四")]),e._v("用户，"),_("code",[e._v("文档3，4")]),e._v("是"),_("code",[e._v("张三")]),e._v("的爱好，"),_("code",[e._v("文档5，6")]),e._v("是"),_("code",[e._v("李四")]),e._v("的爱好")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT my-index-000001/_doc/1?refresh\n{\n  "my_id": "1",\n  "text": "张三",\n  "my_join_field": {\n    "name": "user" \n  }\n}\n\nPUT my-index-000001/_doc/2?refresh\n{\n  "my_id": "2",\n  "text": "李四",\n  "my_join_field": {\n    "name": "user"\n  }\n}\n\nPUT my-index-000001/_doc/3?routing=1&amp;refresh \n{\n  "my_id": "3",\n  "text": "乒乓球",\n  "my_join_field": {\n    "name": "hobby", \n    "parent": "1" \n  }\n}\n\nPUT my-index-000001/_doc/4?routing=1&amp;refresh\n{\n  "my_id": "4",\n  "text": "篮球",\n  "my_join_field": {\n    "name": "hobby",\n    "parent": "1"\n  }\n}\nPUT my-index-000001/_doc/5?routing=1&amp;refresh \n{\n  "my_id": "5",\n  "text": "读书",\n  "my_join_field": {\n    "name": "hobby", \n    "parent": "2" \n  }\n}\n\nPUT my-index-000001/_doc/6?routing=1&amp;refresh\n{\n  "my_id": "6",\n  "text": "下棋",\n  "my_join_field": {\n    "name": "hobby",\n    "parent": "2"\n  }\n}\n\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br"),_("span",{staticClass:"line-number"},[e._v("17")]),_("br"),_("span",{staticClass:"line-number"},[e._v("18")]),_("br"),_("span",{staticClass:"line-number"},[e._v("19")]),_("br"),_("span",{staticClass:"line-number"},[e._v("20")]),_("br"),_("span",{staticClass:"line-number"},[e._v("21")]),_("br"),_("span",{staticClass:"line-number"},[e._v("22")]),_("br"),_("span",{staticClass:"line-number"},[e._v("23")]),_("br"),_("span",{staticClass:"line-number"},[e._v("24")]),_("br"),_("span",{staticClass:"line-number"},[e._v("25")]),_("br"),_("span",{staticClass:"line-number"},[e._v("26")]),_("br"),_("span",{staticClass:"line-number"},[e._v("27")]),_("br"),_("span",{staticClass:"line-number"},[e._v("28")]),_("br"),_("span",{staticClass:"line-number"},[e._v("29")]),_("br"),_("span",{staticClass:"line-number"},[e._v("30")]),_("br"),_("span",{staticClass:"line-number"},[e._v("31")]),_("br"),_("span",{staticClass:"line-number"},[e._v("32")]),_("br"),_("span",{staticClass:"line-number"},[e._v("33")]),_("br"),_("span",{staticClass:"line-number"},[e._v("34")]),_("br"),_("span",{staticClass:"line-number"},[e._v("35")]),_("br"),_("span",{staticClass:"line-number"},[e._v("36")]),_("br"),_("span",{staticClass:"line-number"},[e._v("37")]),_("br"),_("span",{staticClass:"line-number"},[e._v("38")]),_("br"),_("span",{staticClass:"line-number"},[e._v("39")]),_("br"),_("span",{staticClass:"line-number"},[e._v("40")]),_("br"),_("span",{staticClass:"line-number"},[e._v("41")]),_("br"),_("span",{staticClass:"line-number"},[e._v("42")]),_("br"),_("span",{staticClass:"line-number"},[e._v("43")]),_("br"),_("span",{staticClass:"line-number"},[e._v("44")]),_("br"),_("span",{staticClass:"line-number"},[e._v("45")]),_("br"),_("span",{staticClass:"line-number"},[e._v("46")]),_("br"),_("span",{staticClass:"line-number"},[e._v("47")]),_("br"),_("span",{staticClass:"line-number"},[e._v("48")]),_("br"),_("span",{staticClass:"line-number"},[e._v("49")]),_("br"),_("span",{staticClass:"line-number"},[e._v("50")]),_("br"),_("span",{staticClass:"line-number"},[e._v("51")]),_("br"),_("span",{staticClass:"line-number"},[e._v("52")]),_("br"),_("span",{staticClass:"line-number"},[e._v("53")]),_("br"),_("span",{staticClass:"line-number"},[e._v("54")]),_("br"),_("span",{staticClass:"line-number"},[e._v("55")]),_("br"),_("span",{staticClass:"line-number"},[e._v("56")]),_("br"),_("span",{staticClass:"line-number"},[e._v("57")]),_("br")])]),_("p",[e._v("需要注意的是 "),_("code",[e._v("写入数据时必须指定路由值，因为父子文档必须保证数据存储在同一个分片")])]),e._v(" "),_("p",[e._v("一个父文档可以有多个子文档,如下,"),_("code",[e._v("user")]),e._v("是"),_("code",[e._v("hobby")]),e._v("和"),_("code",[e._v("girlfriend")]),e._v("的父类，"),_("code",[e._v("grielfriend")]),e._v("是"),_("code",[e._v("fans")]),e._v("的父类")]),e._v(" "),_("img",{staticStyle:{zoom:"67%"},attrs:{src:"/Users/cxt/Documents/personal/wechataccount/doc/database/elasticsearch/es8.1认证/根据给定的需求创建一个索引.assets/image-20220901223720420.png",alt:"image-20220901223720420"}}),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('\n\nPUT my-index-000001\n{\n  "mappings": {\n    "properties": {\n      "my_join_field": {\n        "type": "join",\n        "relations": {\n          "user": ["hobby", "girlfriend"],  \n          "girlfriend": "fans" \n        }\n      }\n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Keyword")])]),e._v(" "),_("ul",[_("li",[e._v("关键字类型，单一的内容，比如身份证，姓名，Ip 等这种数据使用")]),e._v(" "),_("li",[e._v("常量类型字段，一个索引中该字段的值是固定不变的，创建索引时指定，如果与指定的值不同，文档拒绝写入")]),e._v(" "),_("li",[e._v("模糊查询类型，模糊查询可在"),_("code",[e._v("keyword")]),e._v("类型时使用，通配符类型在文本内容基数较大时候的做了优化")])]),e._v(" "),_("p",[e._v("关键字类型数据可以用于聚合，排序，查询("),_("code",[e._v("term")]),e._v(")")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Nested")])]),e._v(" "),_("p",[e._v("嵌套对象类型，作为一个单独的"),_("code",[e._v("lucene")]),e._v("文档索引，支持查询，排序，聚合，聚合父文档等功能，详细可参考博主的另一篇"),_("code",[e._v("Nested")]),e._v("详解，点击标签即可访问")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Numeric")])]),e._v(" "),_("p",[e._v("数字类型，支持"),_("code",[e._v("long")]),e._v("、"),_("code",[e._v("integer")]),e._v("、"),_("code",[e._v("short")]),e._v("、"),_("code",[e._v("byte")]),e._v("、"),_("code",[e._v("double")]),e._v("、"),_("code",[e._v("float")]),e._v("、"),_("code",[e._v("half_float")]),e._v("、"),_("code",[e._v("scaled_float")]),e._v("、"),_("code",[e._v("unsigned_long")])]),e._v(" "),_("p",[e._v("对于整数类型，使用"),_("code",[e._v("long")]),e._v("、"),_("code",[e._v("integer")]),e._v("、"),_("code",[e._v("short")]),e._v("、"),_("code",[e._v("byte")]),e._v("就可以，浮点数可以使用"),_("code",[e._v("scaled_float")]),e._v("，如果"),_("code",[e._v("scaled_float")]),e._v("不能满足，那可以选取精读更高的"),_("code",[e._v("double")]),e._v("、"),_("code",[e._v("float")]),e._v("、"),_("code",[e._v("half_float")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Object")])]),e._v(" "),_("p",[e._v("在学习"),_("code",[e._v("Nested")]),e._v("嵌套对象类型的时候我们已经提到了一点，如果我们不知道对象类型，默认的就是"),_("code",[e._v("Object")]),e._v("类型的数据，在"),_("code",[e._v("Elasticsearch")]),e._v("内部，这个文档会被索引成一个简单扁平化的键值对形式")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Range")])]),e._v(" "),_("p",[e._v("表示一个范围内的数据，使用"),_("code",[e._v("gt")]),e._v("或者"),_("code",[e._v("gte")]),e._v("定义下界，使用"),_("code",[e._v("lt")]),e._v("、"),_("code",[e._v("lte")]),e._v("定义上界，不过支持的聚合的类型有限，支持"),_("code",[e._v("histogram")]),e._v("或者"),_("code",[e._v("cardinality")])]),e._v(" "),_("p",[e._v("支持的类型有"),_("code",[e._v("integer_range")]),e._v("、"),_("code",[e._v("float_range")]),e._v("、"),_("code",[e._v("long_range")]),e._v("、"),_("code",[e._v("double_range")]),e._v("、"),_("code",[e._v("date_range")]),e._v("、"),_("code",[e._v("ip_range")])])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Text")])]),e._v(" "),_("p",[e._v("文本类型、为了"),_("code",[e._v("text")]),e._v("和"),_("code",[e._v("match_only_text")]),e._v("，"),_("code",[e._v("text")]),e._v("传统的全文检索字段类型；"),_("code",[e._v("match_only_text")]),e._v("一种优化占用空间的文本类型，关闭打分，对需要执行查看进行较慢的操作，适合用作日志索引")]),e._v(" "),_("p",[e._v("一般情况下使用"),_("code",[e._v("text")]),e._v("文件类型的字段还会使用一个"),_("code",[e._v("keyword")]),e._v("的字段，进行"),_("strong",[e._v("聚合、排序、关键字匹配")]),e._v("等操作")])])]),e._v(" "),_("h3",{attrs:{id:"_2-2-2、字段动态映射"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2、字段动态映射"}},[e._v("#")]),e._v(" 2.2.2、字段动态映射")]),e._v(" "),_("p",[e._v("何为"),_("strong",[e._v("Dynamic mapping")]),e._v("，我们知道在使用关系型数据库"),_("code",[e._v("mysql")]),e._v("的时候，我们创建一个表之后需要创建字段，比如"),_("strong",[e._v("字符串ID")]),e._v("，"),_("strong",[e._v("字符串NAME，时间类型CREATE_TIME")]),e._v("等字段来使用，而"),_("code",[e._v("Elasticsearch")]),e._v("强大的就在于我们不在像关系型数据库那样提前设置好字段以及每个字段的类型，我们只需要保存一个文档，"),_("strong",[e._v("ES")]),e._v("会自动的推断出数据类型并创建好"),_("strong",[e._v("索引，类型，字段映射关系")]),e._v("等")]),e._v(" "),_("p",[e._v("当"),_("code",[e._v("Elasticsearch")]),e._v("检测到新字段时，默认情况下"),_("code",[e._v("Elasticsearch")]),e._v("会自动的识别字段数据类型，并将字段添加到"),_("code",[e._v("mapping")]),e._v("映射中，但是我们可以通过参数"),_("code",[e._v("dynamic")]),e._v("来指定是否自动添加字段映射，可选值有"),_("code",[e._v("true")]),e._v("和"),_("code",[e._v("runtime")]),e._v("，如果为"),_("code",[e._v("true")]),e._v("默认使用以下规则生成字段映射关系")]),e._v(" "),_("table",[_("thead",[_("tr",[_("th",[e._v("JSON data type")]),e._v(" "),_("th",[e._v('"dynamic":"true"')]),e._v(" "),_("th",[e._v('"dynamic":"runtime"')])])]),e._v(" "),_("tbody",[_("tr",[_("td",[e._v("null")]),e._v(" "),_("td"),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("true or false")]),e._v(" "),_("td",[e._v("boolean")]),e._v(" "),_("td",[e._v("boolean")])]),e._v(" "),_("tr",[_("td",[e._v("double")]),e._v(" "),_("td",[e._v("float")]),e._v(" "),_("td",[e._v("double")])]),e._v(" "),_("tr",[_("td",[e._v("long")]),e._v(" "),_("td",[e._v("long")]),e._v(" "),_("td",[e._v("long")])]),e._v(" "),_("tr",[_("td",[e._v("object")]),e._v(" "),_("td",[e._v("object")]),e._v(" "),_("td")]),e._v(" "),_("tr",[_("td",[e._v("array")]),e._v(" "),_("td",[e._v("根据数组中第一个非空的值判断")]),e._v(" "),_("td",[e._v("根据数组中第一个非空的值判断")])]),e._v(" "),_("tr",[_("td",[e._v("日期类型的字符串")]),e._v(" "),_("td",[e._v("date")]),e._v(" "),_("td",[e._v("date")])]),e._v(" "),_("tr",[_("td",[e._v("数字类型的字符串")]),e._v(" "),_("td",[e._v("float or long")]),e._v(" "),_("td",[e._v("double or long")])]),e._v(" "),_("tr",[_("td",[e._v("不是日期也不是数字的字符串")]),e._v(" "),_("td",[_("code",[e._v("text")]),e._v("类型以及"),_("code",[e._v(".keyword")]),e._v("的字类型")]),e._v(" "),_("td",[e._v("keyword")])])])]),e._v(" "),_("p",[e._v("也可以设置"),_("code",[e._v("dynamic")]),e._v("为"),_("code",[e._v("false")]),e._v("，这样在遇到新的字段时会抛出异常")]),e._v(" "),_("h3",{attrs:{id:"_2-2-3、字段动态映射模版"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3、字段动态映射模版"}},[e._v("#")]),e._v(" 2.2.3、字段动态映射模版")]),e._v(" "),_("p",[e._v("上面我们看到"),_("code",[e._v("Elasticsearch")]),e._v("会自动的推断数据类型，生成字段映射，那么"),_("code",[e._v("Dynamic template")]),e._v("动态模版就是自定义映射，提前内置好映射关系，在使用时通过一定的规则匹配上即可")]),e._v(" "),_("p",[e._v("如下：如果字段名称是"),_("strong",[e._v("ip开头")]),e._v("的字符串，映射为"),_("strong",[e._v("ip类型")]),e._v("的运行时字段")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT my-index-000001/\n{\n  "mappings": {\n    "dynamic_templates": [\n      {\n        "strings_as_ip": {\n          "match_mapping_type": "string",\n          "match": "ip*",\n          "runtime": {\n            "type": "ip"\n          }\n        }\n      }\n    ]\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br")])]),_("p",[e._v("如果想加到"),_("code",[e._v("mapping")]),e._v("中只需替换"),_("code",[e._v("runtime")]),e._v("为"),_("code",[e._v("mapping")]),e._v("即可")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT my-index-000001/\n{\n  "mappings": {\n    "dynamic_templates": [\n      {\n        "strings_as_ip": {\n          "match_mapping_type": "string",\n          "match": "ip*",\n          "mapping": {\n            "type": "ip"\n          }\n        }\n      }\n    ]\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br")])]),_("h3",{attrs:{id:"_2-2-4、自定义字段映射"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4、自定义字段映射"}},[e._v("#")]),e._v(" 2.2.4、自定义字段映射")]),e._v(" "),_("p",[e._v("自定义字段映射，其实就是关系数据库中创建表时的字段设置，顾名思义就是提前设置好索引需要的字段以及字段类型，在添加文档时如遇到新字段报错（可配置），一般在规范索引字段时使用，比如日志索引，根据日期每天定时生成一个新的索引，这个索引我们就可以提前设置好模版，生成索引时直接使用模版生成，而模版中，直接定义好字段的类型，也就是说，自定义字段映射关系可以在映射模版的基础上使用的（关于索引模版的使用查看后文）如下是自定义字段映射的一个小例子")]),e._v(" "),_("p",[e._v("我们创建一个索引"),_("code",[e._v("my-index-000001")]),e._v("，其中"),_("code",[e._v("age")]),e._v("时"),_("code",[e._v("integer")]),e._v("类型，"),_("code",[e._v("email")]),e._v("是"),_("code",[e._v("keyword")]),e._v("类型，"),_("code",[e._v("name")]),e._v("是"),_("code",[e._v("text")]),e._v("类型")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT /my-index-000001\n{\n  "mappings": {\n    "properties": {\n      "age":    { "type": "integer" },  \n      "email":  { "type": "keyword"  }, \n      "name":   { "type": "text"  }     \n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br")])]),_("p",[e._v("后续如果我们想修改这个已经创建的索引，比如增加个字段，那可以使用如下语句")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT /my-index-000001/_mapping\n{\n  "properties": {\n    "employee-id": {\n      "type": "keyword",\n      "index": false\n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br")])]),_("p",[e._v("查看索引"),_("code",[e._v("mapping")]),e._v("语句如下")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("# 查看所有的字段映射\nGET my-index-000001/_mapping\n# 查看某一个字段的映射关系，此处以age举例\nGET my-index-000001/_mapping/field/age\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br")])]),_("h2",{attrs:{id:"_2-3、文本分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3、文本分析"}},[e._v("#")]),e._v(" 2.3、文本分析")]),e._v(" "),_("h3",{attrs:{id:"_2-3-1、什么是文本分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1、什么是文本分析"}},[e._v("#")]),e._v(" 2.3.1、什么是文本分析")]),e._v(" "),_("p",[e._v("文本分析是"),_("code",[e._v("Elasticsearch")]),e._v("实现全文检索的前提，通过全文检索可以实现返回结果不仅包含精确完全匹配的结果，还包含相近的结果。比如我们有个数据"),_("code",[e._v("中华人民共和国")]),e._v("，其中我们搜索"),_("code",[e._v("中华")]),e._v("或者"),_("code",[e._v("人民")]),e._v("或者"),_("code",[e._v("共和国")]),e._v("或者其他组合词语的时候都可以搜索出来，不仅限于"),_("code",[e._v("中华人民共和国")])]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("Tokenization")]),e._v(": 当我们进行全文检索时，分词可以让我们把一个词语拆分成更小的词语，默认情况下，这些小的词语也是有单独的词语语义")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Normalization")]),e._v(": 其中"),_("code",[e._v("Tokenization")]),e._v("可以解决单个关键词的匹配查询， 但是还是精确匹配，不能解决以下这种情况的查询")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("Quick")]),e._v("与"),_("code",[e._v("quick")]),e._v("的大小写")]),e._v(" "),_("li",[_("code",[e._v("fox")]),e._v("与"),_("code",[e._v("foxes")]),e._v("的词根")]),e._v(" "),_("li",[_("code",[e._v("jumps")]),e._v("与"),_("code",[e._v("leaps")]),e._v("的近义词")])]),e._v(" "),_("p",[e._v("为了解决这些问题，文本分析可以将这些token分词规范化为标准格式，这样就可以实现大小写，词根匹配，近义词匹配。")]),e._v(" "),_("p",[e._v("为了确保搜索时搜索词与预期的词匹配，尽量要使用相同的"),_("code",[e._v("tokenization")]),e._v("和"),_("code",[e._v("normalization")]),e._v("规则")])])]),e._v(" "),_("h3",{attrs:{id:"_2-3-2、配置文本分析器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2、配置文本分析器"}},[e._v("#")]),e._v(" 2.3.2、配置文本分析器")]),e._v(" "),_("p",[e._v("默认情况下，"),_("code",[e._v("Elasticsearch")]),e._v("使用"),_("code",[e._v("standard analyzer")]),e._v("，如果不能满足我们的需求，我们可以使用其他的内置分析器，或者自定义分词器，分析器的组成有三部分，"),_("code",[e._v("character filter")]),e._v("、"),_("code",[e._v("tokenizer")]),e._v("、"),_("code",[e._v("token filter")]),e._v("其中这三部分都可以根据我们的需求来进行选择设置")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("Character filter")])]),e._v(" "),_("p",[e._v("翻译一下就是字符过滤器，用在分词之前，常用的有"),_("strong",[e._v("html符号")]),e._v("移除，"),_("strong",[e._v("正则")]),e._v("替换、"),_("strong",[e._v("映射字符")]),e._v("替换")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Tokenizer")])]),e._v(" "),_("p",[e._v("核心分词器，将一组字符流拆成单个词语，具体的分词策略在此实现，默认的"),_("strong",[e._v("标准分词器")]),e._v("，常用的"),_("strong",[e._v("中文分词器")]),e._v("，"),_("strong",[e._v("英文分词器")]),e._v("、"),_("strong",[e._v("拼音分词器")]),e._v("等")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("Token filter")])]),e._v(" "),_("p",[e._v("分词之后的词语过滤，比如英文中的"),_("strong",[e._v("停用词移除(a,an,the)、转换大小写")]),e._v("等")])])]),e._v(" "),_("h3",{attrs:{id:"_2-3-4、自定义分词器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-4、自定义分词器"}},[e._v("#")]),e._v(" 2.3.4、自定义分词器")]),e._v(" "),_("h4",{attrs:{id:"需求"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#需求"}},[e._v("#")]),e._v(" 需求")]),e._v(" "),_("ol",[_("li",[e._v("实现中文分词")]),e._v(" "),_("li",[e._v("实现拼音分词（词语全拼，词语首字母简拼）")]),e._v(" "),_("li",[e._v("实现"),_("code",[e._v(":) => _happy_")]),e._v(","),_("code",[e._v(":( => _sad_")])]),e._v(" "),_("li",[e._v("使用"),_("code",[e._v("pattern_replace")]),e._v("替换"),_("code",[e._v("我")]),e._v("为"),_("code",[e._v("机智如我")])])]),e._v(" "),_("h4",{attrs:{id:"解决方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决方案"}},[e._v("#")]),e._v(" 解决方案")]),e._v(" "),_("ul",[_("li",[e._v("使用中文"),_("code",[e._v("IK分词器")]),e._v("加"),_("code",[e._v("拼音分词器")]),e._v("组合实现上述"),_("code",[e._v("需求1，2")])]),e._v(" "),_("li",[e._v("使用"),_("code",[e._v("char_filter")]),e._v("实现上述"),_("code",[e._v("需求3")])]),e._v(" "),_("li",[e._v("使用"),_("code",[e._v("filter")]),e._v("实现上述"),_("code",[e._v("需求4")])])]),e._v(" "),_("h4",{attrs:{id:"过程分析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过程分析"}},[e._v("#")]),e._v(" 过程分析")]),e._v(" "),_("p",[e._v("首先自定义分词器"),_("code",[e._v("ik_smart_pinyin")]),e._v("与"),_("code",[e._v("ik_max_pinyin")])]),e._v(" "),_("ul",[_("li",[_("code",[e._v("ik_smart_pinyin")]),e._v("：简单分词，分的比较粗，词语少")]),e._v(" "),_("li",[_("code",[e._v("ik_max_pinyin")]),e._v("：最大粒度分词，分的比较细，词语多")])]),e._v(" "),_("p",[e._v("其中"),_("code",[e._v("ik_smart_pinyin")]),e._v("加入"),_("code",[e._v("pinyin_first_letter_and_full_pinyin_filter")]),e._v("实现拼音分词")]),e._v(" "),_("p",[_("code",[e._v("ik_max_pinyin")]),e._v("也加入"),_("code",[e._v("pinyin_first_letter_and_full_pinyin_filter")]),e._v("实现拼音分词，但是为了对比，此处"),_("code",[e._v("ik_max_pinyin")]),e._v("分词器再加入自定义的"),_("code",[e._v("pattern_replace_filter")]),e._v("实现上述的"),_("code",[e._v("需求4")]),e._v("，加入"),_("code",[e._v("my_mappings_char_filter")]),e._v("实现上述"),_("code",[e._v("需求3")])]),e._v(" "),_("h4",{attrs:{id:"settings全部内容"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#settings全部内容"}},[e._v("#")]),e._v(" settings全部内容")]),e._v(" "),_("p",[e._v("完整的创建索引"),_("code",[e._v("settings")]),e._v("内容如下")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT ik_index\n{\n  "settings": {\n    "analysis": {\n      "analyzer": {\n        "ik_smart_pinyin": {\n          "tokenizer": "ik_smart",\n          "filter": [\n            "pinyin_first_letter_and_full_pinyin_filter"\n          ]\n        },\n        "ik_max_pinyin": {\n          "tokenizer": "ik_max_word",\n          "filter": [\n            "pinyin_first_letter_and_full_pinyin_filter",\n            "pattern_replace_filter"\n          ],\n          "char_filter": "my_mappings_char_filter"\n        }\n      },\n      "filter": {\n        "pinyin_first_letter_and_full_pinyin_filter": {\n          "type": "pinyin",\n          "keep_separate_first_letter": false,\n          "keep_full_pinyin": true,\n          "keep_original": true,\n          "limit_first_letter_length": 16,\n          "lowercase": true,\n          "remove_duplicated_term": true\n        },\n        "pattern_replace_filter": {\n          "type": "pattern_replace",\n          "pattern": "(我)",\n          "replacement": "机智如$1"\n        }\n      },\n      "char_filter": {\n        "my_mappings_char_filter": {\n          "type": "mapping",\n          "mappings": [\n            ":) => _happy_",\n            ":( => _sad_"\n          ]\n        }\n      }\n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br"),_("span",{staticClass:"line-number"},[e._v("10")]),_("br"),_("span",{staticClass:"line-number"},[e._v("11")]),_("br"),_("span",{staticClass:"line-number"},[e._v("12")]),_("br"),_("span",{staticClass:"line-number"},[e._v("13")]),_("br"),_("span",{staticClass:"line-number"},[e._v("14")]),_("br"),_("span",{staticClass:"line-number"},[e._v("15")]),_("br"),_("span",{staticClass:"line-number"},[e._v("16")]),_("br"),_("span",{staticClass:"line-number"},[e._v("17")]),_("br"),_("span",{staticClass:"line-number"},[e._v("18")]),_("br"),_("span",{staticClass:"line-number"},[e._v("19")]),_("br"),_("span",{staticClass:"line-number"},[e._v("20")]),_("br"),_("span",{staticClass:"line-number"},[e._v("21")]),_("br"),_("span",{staticClass:"line-number"},[e._v("22")]),_("br"),_("span",{staticClass:"line-number"},[e._v("23")]),_("br"),_("span",{staticClass:"line-number"},[e._v("24")]),_("br"),_("span",{staticClass:"line-number"},[e._v("25")]),_("br"),_("span",{staticClass:"line-number"},[e._v("26")]),_("br"),_("span",{staticClass:"line-number"},[e._v("27")]),_("br"),_("span",{staticClass:"line-number"},[e._v("28")]),_("br"),_("span",{staticClass:"line-number"},[e._v("29")]),_("br"),_("span",{staticClass:"line-number"},[e._v("30")]),_("br"),_("span",{staticClass:"line-number"},[e._v("31")]),_("br"),_("span",{staticClass:"line-number"},[e._v("32")]),_("br"),_("span",{staticClass:"line-number"},[e._v("33")]),_("br"),_("span",{staticClass:"line-number"},[e._v("34")]),_("br"),_("span",{staticClass:"line-number"},[e._v("35")]),_("br"),_("span",{staticClass:"line-number"},[e._v("36")]),_("br"),_("span",{staticClass:"line-number"},[e._v("37")]),_("br"),_("span",{staticClass:"line-number"},[e._v("38")]),_("br"),_("span",{staticClass:"line-number"},[e._v("39")]),_("br"),_("span",{staticClass:"line-number"},[e._v("40")]),_("br"),_("span",{staticClass:"line-number"},[e._v("41")]),_("br"),_("span",{staticClass:"line-number"},[e._v("42")]),_("br"),_("span",{staticClass:"line-number"},[e._v("43")]),_("br"),_("span",{staticClass:"line-number"},[e._v("44")]),_("br"),_("span",{staticClass:"line-number"},[e._v("45")]),_("br"),_("span",{staticClass:"line-number"},[e._v("46")]),_("br"),_("span",{staticClass:"line-number"},[e._v("47")]),_("br"),_("span",{staticClass:"line-number"},[e._v("48")]),_("br")])]),_("h2",{attrs:{id:"_2-4、小结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-4、小结"}},[e._v("#")]),e._v(" 2.4、小结")]),e._v(" "),_("p",[e._v("在上面创建的自定义分词器的基础上，我们在创建"),_("code",[e._v("mapping")]),e._v("字段关系映射时就可以直接指定"),_("code",[e._v("ik_smart_pinyin")]),e._v("或者"),_("code",[e._v("ik_max_pinyin")]),e._v("分词器即可实现分词啦，如下示例所示：")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT ik_index/_mapping/\n{\n  "properties": {\n    "content": {\n      "type": "text",\n      "analyzer": "ik_smart_pinyin"\n    }\n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br"),_("span",{staticClass:"line-number"},[e._v("7")]),_("br"),_("span",{staticClass:"line-number"},[e._v("8")]),_("br"),_("span",{staticClass:"line-number"},[e._v("9")]),_("br")])]),_("h1",{attrs:{id:"三、总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、总结"}},[e._v("#")]),e._v(" 三、总结")]),e._v(" "),_("blockquote",[_("p",[e._v("假总结，真心理总结")])]),e._v(" "),_("p",[e._v("通过上面的学习，我们知道了设置索引时的常用参数、常见的字段类型以及建立字段映射关系时的参数设置，可以看得出来，创建索引就这三块，只要这三块使用熟练了，哪怕不查看官网也可以直接创建出一个满足自己需求的索引，鉴于考试时也都是可以参考官网的，所以上面的内容也不用死记硬背，只需要理解，多操作，记住常见的配置项即可了。好了该篇文章已经进入尾声了，一直想早点结束，但是写着写着就发现，知识点太多， 假设都写到这篇文章里，那就长的过分了，所以文中就分了几篇小的，比如字段类型那块，Geo、Nested等单独输出了一篇文章，想参考学习的可以关注公众号【醉鱼JAVA】直接去获取。后面的话，也是尽快吧，尽量赶点进度，把工作中常用的知识点整理起来，结合考点输出汇总，如果大家有好的意见或者建议欢迎评论区留言，下篇文章见喽！！！")])])}),[],!1,null,null,null);_.default=a.exports}}]);