(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{458:function(e,_,s){"use strict";s.r(_);var v=s(2),t=Object(v.a)({},(function(){var e=this,_=e._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("blockquote",[_("p",[e._v("版本 Elasticsearch 8.x")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/2573da1e-be96-4d73-ba18-75e56c4f50a3.png",alt:""}})]),e._v(" "),_("p",[e._v("今天来看下 Elasticsearch 中的写入流程。")]),e._v(" "),_("blockquote",[_("p",[e._v("不想看过程可以直接跳转文章末尾查看总结部分。最后附上个人理解的一个图。")])]),e._v(" "),_("p",[e._v("从我们发出写入请求，到 Elasticsearch 接收请求，处理请求，保存数据到磁盘，这个过程中经历了哪些处理呢？Elasticsearch 又做了哪些操作？对于 Elasticsearch 写入一篇文档相信大家不陌生，但是Elasticsearch 的底层究竟是如何处理的呢，让我们一起来一探究竟。")]),e._v(" "),_("h1",{attrs:{id:"写入流程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写入流程"}},[e._v("#")]),e._v(" 写入流程")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/ef6e2c27-1097-4f94-9967-39c5dfd113ab.png",alt:""}})]),e._v(" "),_("p",[e._v("1、客户端发送写请求时，发送给任意一个节点，这个节点就是所谓的协调节点（"),_("code",[e._v("coordinating node")]),e._v("）。（对应图中的"),_("code",[e._v("序号1")]),e._v("）")]),e._v(" "),_("p",[e._v("2、计算文档要写入的分片位置，使用 "),_("code",[e._v("Hash")]),e._v(" 取模算法（最新版 "),_("code",[e._v("Hash")]),e._v(" 算法）(对应图中"),_("code",[e._v("序号2")]),e._v(")。")]),e._v(" "),_("div",{staticClass:"language- line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("routing_factor = num_routing_shards / num_primary_shards\nshard_num = (hash(_routing) % num_routing_shards) / routing_factor\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("3、协调节点进行路由，将请求转发给对应的 "),_("code",[e._v("primary sharding")]),e._v(" 所在的 "),_("code",[e._v("datanode")]),e._v("(对应图中"),_("code",[e._v("序号2")]),e._v(")。")]),e._v(" "),_("p",[e._v("4、"),_("code",[e._v("datanode")]),e._v(" 节点上的 "),_("code",[e._v("primary sharding")]),e._v(" 处理请求，写入数据到索引库，并且将数据同步到对应的 "),_("code",[e._v("replica sharding")]),e._v("(对应图中"),_("code",[e._v("序号3")]),e._v(")。")]),e._v(" "),_("p",[e._v("5、等 "),_("code",[e._v("primary sharding")]),e._v(" 和 "),_("code",[e._v("replica sharding")]),e._v(" 都保存好之后返回响应(对应图中"),_("code",[e._v("序号 4,5,6")]),e._v(")。")]),e._v(" "),_("h2",{attrs:{id:"路由分片算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#路由分片算法"}},[e._v("#")]),e._v(" 路由分片算法")]),e._v(" "),_("p",[e._v("在"),_("code",[e._v("7.13")]),e._v("版本之前，计算方式如下：")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("shard_num = hash(_routing) % num_primary_shards\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("p",[e._v("从"),_("code",[e._v("7.13")]),e._v(" 版本开始，不包括 "),_("code",[e._v("7.13")]),e._v(" ，计算方式就改为了上述"),_("code",[e._v("步骤2")]),e._v("的计算方式。")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("routing_factor = num_routing_shards / num_primary_shards\nshard_num = (hash(_routing) % num_routing_shards) / routing_factor\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("ul",[_("li",[_("p",[_("code",[e._v("num_routing_shards")]),e._v(" 就是配置文件中 "),_("code",[e._v("index.number_of_routing_shard")]),e._v(" 的值。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("num_primary_shard")]),e._v(" 就是配置文件中 "),_("code",[e._v("index.number_of_shard")]),e._v(" 的值。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("_routing")]),e._v(" 默认就是文档的 "),_("code",[e._v("ID")]),e._v("，但是我们可以自定义该路由值。")])])]),e._v(" "),_("h2",{attrs:{id:"等待激活的分片"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#等待激活的分片"}},[e._v("#")]),e._v(" 等待激活的分片")]),e._v(" "),_("p",[e._v("此处以 "),_("code",[e._v("Create index API")]),e._v(" 举例说明，其中有一个请求参数 "),_("code",[e._v("wait_for_active_shards")]),e._v("。\n该参数的作用就是写入请求发送到ES之后，需要等待多少数量的分片处于激活状态后再继续执行后续操作。如果所需要数量的分片副本不足，则写入操作需等待并重试，直到所有的分片副本都已经启动或者发生超时。")]),e._v(" "),_("p",[e._v("默认情况下，写入操作仅等待主分片处于活动状态后继续执行（即 "),_("code",[e._v("wait_for_active_shard")]),e._v("=1）。")]),e._v(" "),_("ul",[_("li",[e._v("（可选）的字符串值。")]),e._v(" "),_("li",[e._v("默认"),_("code",[e._v("1")]),e._v("。")]),e._v(" "),_("li",[e._v("可以设置为"),_("code",[e._v("all")]),e._v("，或者任意一个正整数，最多是索引的副本分片数+1（"),_("code",[e._v("number_of_replicas")]),e._v("+1)。")])]),e._v(" "),_("blockquote",[_("p",[e._v("该设置极大的降低了写操作未写入所需数量分片副本的机会，但是并没有完全避免。")])]),e._v(" "),_("h1",{attrs:{id:"写入原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#写入原理"}},[e._v("#")]),e._v(" 写入原理")]),e._v(" "),_("p",[e._v("先来一个官网的写入流程图（地址在文末获取）。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/e95056b2-e0d7-4aec-b302-f49dc95cdfa7.png",alt:"Elasticsearh 写入流程图"}})]),e._v(" "),_("h2",{attrs:{id:"近实时"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#近实时"}},[e._v("#")]),e._v(" 近实时")]),e._v(" "),_("p",[e._v("对于 "),_("code",[e._v("Elasticsearch")]),e._v(" 的写入流程来说，就三部分：")]),e._v(" "),_("p",[e._v("1、写入到内存缓冲区。")]),e._v(" "),_("p",[e._v("2、写入打开新的 "),_("code",[e._v("segment")]),e._v("。")]),e._v(" "),_("p",[e._v("3、写入 "),_("code",[e._v("disk")]),e._v("。")]),e._v(" "),_("p",[e._v("为什么称为近实时，是因为在写入到内存缓冲区的时候，我们是还无法进行检索的，等到写入到"),_("code",[e._v("segment")]),e._v("之后，就可以进行检索到了，所以这是"),_("code",[e._v("近实时")]),e._v("的原因。")]),e._v(" "),_("p",[_("strong",[e._v("因为相对于写到磁盘，打开 "),_("code",[e._v("segment")]),e._v(" 写入文件系统缓存的代价比写入磁盘的代价低的多。")])]),e._v(" "),_("p",[e._v("第一步、写入文档到内存缓冲区（"),_("strong",[e._v("此时文档不可被检索")]),e._v("）。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/84ded947-0a13-4c33-8721-ff38c8594b35.png",alt:""}})]),e._v(" "),_("p",[e._v("第二步、缓冲区的内容写入到 "),_("code",[e._v("segment")]),e._v("，但是还未提交（"),_("strong",[e._v("可被检索")]),e._v("）。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/297cf74d-4ab4-43c3-93df-dd70a902e7f2.png",alt:""}})]),e._v(" "),_("p",[e._v("在 Elasticsearch 中，写入和打开一个新"),_("code",[e._v("segment")]),e._v("的过程称为 "),_("code",[e._v("refresh")]),e._v("，"),_("code",[e._v("refresh")]),e._v("操作会自上次刷新（"),_("code",[e._v("refresh")]),e._v("）以来执行的所有操作都可用搜索。")]),e._v(" "),_("p",[_("code",[e._v("refresh")]),e._v("触发的方式有如下三种：")]),e._v(" "),_("p",[e._v("1、刷新间隔到了自动刷新。")]),e._v(" "),_("p",[e._v("2、URL增加"),_("code",[e._v("?refresh")]),e._v("参数，需要传"),_("code",[e._v("空")]),e._v("或者"),_("code",[e._v("true")]),e._v("。")]),e._v(" "),_("p",[e._v("3、调用"),_("code",[e._v("Refresh API")]),e._v("手动刷新")]),e._v(" "),_("p",[e._v("默认情况下，Elasticsearch 每秒定期刷新，但是仅限于在过去的"),_("code",[e._v("30s")]),e._v("内收到的一个或者多个 "),_("code",[e._v("search")]),e._v("请求。这个也就是近实时的一个点，文档的更改不会立即显示在下一次的检索中，需要等待 "),_("code",[e._v("refresh")]),e._v(" 操作完成之后才可以检索出来。")]),e._v(" "),_("p",[e._v("我们可以通过如下方式触发"),_("code",[e._v("refresh")]),e._v("操作或者调整自动刷新的间隔。")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("POST /_refresh \nPOST /blogs/_refresh\n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("调整刷新间隔，每 "),_("code",[e._v("30s")]),e._v(" 刷新")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT /my_logs\n{\n  "settings": {\n    "refresh_interval": "30s" \n  }\n}\n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br"),_("span",{staticClass:"line-number"},[e._v("3")]),_("br"),_("span",{staticClass:"line-number"},[e._v("4")]),_("br"),_("span",{staticClass:"line-number"},[e._v("5")]),_("br"),_("span",{staticClass:"line-number"},[e._v("6")]),_("br")])]),_("p",[e._v("关闭自动刷新")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT /my_logs/_settings\n{ "refresh_interval": -1 } \n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("p",[e._v("设置为每秒自动刷新")]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v('PUT /my_logs/_settings\n{ "refresh_interval": "1s" \n')])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br"),_("span",{staticClass:"line-number"},[e._v("2")]),_("br")])]),_("blockquote",[_("p",[_("code",[e._v("refresh_interval")]),e._v(" 需要一个 持续时间 值， 例如 "),_("code",[e._v("1s")]),e._v(" （1 秒） 或 "),_("code",[e._v("2m")]),e._v(" （2 分钟）。 一个绝对值 "),_("code",[e._v("1")]),e._v(" 表示的是 "),_("code",[e._v("1毫秒")]),e._v(" --无疑会使你的集群陷入瘫痪。")])]),e._v(" "),_("h2",{attrs:{id:"段-segment-合并"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#段-segment-合并"}},[e._v("#")]),e._v(" 段（"),_("code",[e._v("segment")]),e._v("）合并")]),e._v(" "),_("p",[e._v("由于 "),_("code",[e._v("refresh")]),e._v(" 操作会每秒自动刷新生成一个新的段("),_("code",[e._v("segment")]),e._v(")，这样的话短时间内，"),_("code",[e._v("segment")]),e._v("会暴增，"),_("code",[e._v("segment")]),e._v("数量太多，每一个都会造成文件句柄、内存、CPU的大量消耗，还有一个更重要的点就是，每个检索请求也会轮流检查每一个"),_("code",[e._v("segment")]),e._v("，"),_("strong",[e._v("所以"),_("code",[e._v("segment")]),e._v("越多，检索也就越慢。")])]),e._v(" "),_("p",[e._v("Elasticsearch 通过在后台自动合并 "),_("code",[e._v("segment")]),e._v(" 来解决这个问题的。小的"),_("code",[e._v("segment")]),e._v("被合并到大的"),_("code",[e._v("segment")]),e._v("，然后大的"),_("code",[e._v("segment")]),e._v("在被合并到更大的"),_("code",[e._v("segment")]),e._v("。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/5d71c07b-139c-4045-b88a-c32695c0ba01.png",alt:""}})]),e._v(" "),_("p",[_("code",[e._v("segment")]),e._v(" 合并的时候会自动将"),_("code",[e._v("已删除")]),e._v("的文档从文件系统中删除，已经删除的文档或者更新文档的旧版本不会被合并到新的 "),_("code",[e._v("segment")]),e._v("中。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/c731c539-6a9c-4fa7-a432-d0f2b9d9fa28.png",alt:""}})]),e._v(" "),_("p",[e._v("1、当 "),_("code",[e._v("index")]),e._v(" 的时候，"),_("code",[e._v("refresh")]),e._v("操作会创建新的"),_("code",[e._v("segment")]),e._v("，并将"),_("code",[e._v("segment")]),e._v("打开以供检索。")]),e._v(" "),_("p",[e._v("2、合并进行会选择一小部分大小相似的"),_("code",[e._v("segment")]),e._v("，在后台将他们合并到更大的"),_("code",[e._v("segment")]),e._v("中，这个操作不会中断 "),_("code",[e._v("index")]),e._v(" 与 "),_("code",[e._v("search")]),e._v(" 操作。")]),e._v(" "),_("h2",{attrs:{id:"optimize-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#optimize-api"}},[e._v("#")]),e._v(" optimize API")]),e._v(" "),_("blockquote",[_("p",[_("code",[e._v("optimize API")]),e._v(" 不应该用在经常更新的索引上")])]),e._v(" "),_("p",[e._v("该 "),_("code",[e._v("optimize API")]),e._v(" 可以控制分片最大的 "),_("code",[e._v("segment")]),e._v("数量，对于有的索引，例如日志，每天、每周、每月的日志被单独存在一个索引上，老得索引一般都是只读的，也不太可能发生变化，所以我们就可以使用这个 "),_("code",[e._v("optimize API")]),e._v(" 优化老的索引，将每个分片合并为一个单独的"),_("code",[e._v("segment")]),e._v("。这样既可以节省资源，也可以加快检索速度。")]),e._v(" "),_("ul",[_("li",[e._v("合并索引中的每个分片为一个单独的段")])]),e._v(" "),_("div",{staticClass:"language-text line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[e._v("POST /logstash-2014-10/_optimize?max_num_segments=1 \n")])]),e._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[e._v("1")]),_("br")])]),_("h2",{attrs:{id:"持久化"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#持久化"}},[e._v("#")]),e._v(" 持久化")]),e._v(" "),_("p",[e._v("上述的"),_("code",[e._v("refresh")]),e._v("操作是 Elasticsearch "),_("code",[e._v("近实时")]),e._v(" 的原因，那么数据的持久化就要看"),_("code",[e._v("fsync")]),e._v("操作把数据从文件系统缓冲区"),_("code",[e._v("flush")]),e._v("到磁盘了。所以只有当"),_("code",[e._v("translog")]),e._v("被"),_("code",[e._v("fsync")]),e._v("操作或者是"),_("code",[e._v("提交")]),e._v("时，"),_("code",[e._v("translog")]),e._v("中的数据才会持久化到磁盘。")]),e._v(" "),_("p",[e._v("如果没有持久化操作，当 Elasticsearch 宕机发生故障的时候，就会发生数据丢失了，所以 Elasticsearch 依赖于"),_("code",[e._v("translog")]),e._v("进行数据恢复。")]),e._v(" "),_("p",[e._v("在 Elasticsearch 进行提交操作的时候，成本是非常高的，所以策略就是在写入到内存缓冲区的时候，同步写入一份数据到"),_("code",[e._v("translog")]),e._v("，所有的"),_("code",[e._v("index")]),e._v("与"),_("code",[e._v("delete")]),e._v("操作都会在内部的"),_("code",[e._v("lucene")]),e._v("索引处理后且未确认提交之前写入"),_("code",[e._v("teanslog")]),e._v("。")]),e._v(" "),_("p",[e._v("如果发生了异常，当分片数据恢复时，已经确认提交但是并没有被上次"),_("code",[e._v("lucene")]),e._v("提交操作包含在内的最近操作就可以在"),_("code",[e._v("translog")]),e._v("中进行恢复。")]),e._v(" "),_("p",[e._v("Elasticsearch 的 "),_("code",[e._v("flush")]),e._v("操作是执行 "),_("code",[e._v("Lucene")]),e._v("提交并开始生成新的"),_("code",[e._v("translog")]),e._v("的过程，为了确保"),_("code",[e._v("translog")]),e._v("文件不能过大，"),_("code",[e._v("flush")]),e._v("操作在后台自动执行，否则在恢复的时候也会因为文件过大花费大量的时间。")]),e._v(" "),_("p",[e._v("对于"),_("code",[e._v("translog")]),e._v("有如下设置选项：")]),e._v(" "),_("ul",[_("li",[_("p",[_("code",[e._v("index.translog.durability")]),e._v(" 默认设置为"),_("code",[e._v("request")]),e._v(" ，意思就是只有当主分片和副本分片"),_("code",[e._v("fsync")]),e._v("且提交"),_("code",[e._v("translog")]),e._v("之后，才会向客户端响应"),_("code",[e._v("index")]),e._v("，"),_("code",[e._v("delete")]),e._v("，"),_("code",[e._v("update")]),e._v("，"),_("code",[e._v("bulk")]),e._v("请求成功。")])]),e._v(" "),_("li",[_("p",[_("code",[e._v("index.translog.durability")]),e._v(" 设置为"),_("code",[e._v("async")]),e._v("，则 Elasticsearch 会在每个"),_("code",[e._v("index.translog.sync_interval")]),e._v(" 提交 "),_("code",[e._v("translog")]),e._v("，如果遇到节点恢复，则在这个区间执行的操作就可能丢失。")])])]),e._v(" "),_("p",[e._v("对于上述的几个参数，都可以动态更新")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("index.translog.sync_interval")])])]),e._v(" "),_("p",[e._v("将 "),_("code",[e._v("translog")]),e._v(" fsync到磁盘并提交的频率。默认"),_("code",[e._v("5s")]),e._v("，不允许小于"),_("code",[e._v("100ms")]),e._v("。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("index.translog.durability")])])]),e._v(" "),_("p",[e._v("是否在每次"),_("code",[e._v("index")]),e._v("，"),_("code",[e._v("delete")]),e._v("，"),_("code",[e._v("update")]),e._v("，"),_("code",[e._v("bulk")]),e._v("操作之后提交"),_("code",[e._v("translog")]),e._v("。")]),e._v(" "),_("p",[_("code",[e._v("request")]),e._v(": 默认，"),_("code",[e._v("fsync")]),e._v(" 每次请求之后提交，如果发生故障，所有已确认的写入操作到已经提交到磁盘")]),e._v(" "),_("p",[_("code",[e._v("async")]),e._v(": "),_("code",[e._v("fsync")]),e._v("在后台每个"),_("code",[e._v("sync_interval")]),e._v("时间间隔提交。如果发生故障，自上次提交以来所有已确认的写入操作将被丢弃。")]),e._v(" "),_("ul",[_("li",[_("code",[e._v("index.translog.flush_threshold_size")])])]),e._v(" "),_("p",[e._v("防止 "),_("code",[e._v("translog")]),e._v(" 文件过大的设置，一旦达到设置的该值，就会发生 "),_("code",[e._v("flush")]),e._v(" 操作，并生成一个新的 "),_("code",[e._v("commit point")]),e._v("。默认"),_("code",[e._v("512mb")]),e._v("。")]),e._v(" "),_("h1",{attrs:{id:"总结"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),_("p",[e._v("1、一个文档被"),_("code",[e._v("index")]),e._v("之后，添加内存缓存区，同时写入"),_("code",[e._v("translog")]),e._v("。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/9fc6bcab-326c-4433-baf8-d7f090a03464.png",alt:""}})]),e._v(" "),_("p",[e._v("2、"),_("code",[e._v("refresh")]),e._v(" 操作完成后，缓存被清空，但是 "),_("code",[e._v("translog")]),e._v(" 不会")]),e._v(" "),_("ul",[_("li",[e._v("内存缓冲区的文档被写入到一个新的"),_("code",[e._v("segment")]),e._v("中，且没有进行"),_("code",[e._v("fsync")]),e._v("操作。")]),e._v(" "),_("li",[_("code",[e._v("segment")]),e._v(" 打开，可供检索。")]),e._v(" "),_("li",[e._v("内存缓冲区清空。")])]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/966fc6cf-96e0-4e01-875b-9d81efc314b3.png",alt:""}})]),e._v(" "),_("p",[e._v("3、更多的文档被添加到内存缓冲区并追加到 "),_("code",[e._v("translog")]),e._v("。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/3c26db17-f9f5-469c-bc9b-dc41ec136d0d.png",alt:""}})]),e._v(" "),_("p",[e._v("4、每隔一段时间，"),_("code",[e._v("translog")]),e._v(" 变得越来越大，索引被刷新（"),_("code",[e._v("flush")]),e._v("），一个新的 "),_("code",[e._v("translog")]),e._v(" 被创建，并且一个提交执行。")]),e._v(" "),_("ul",[_("li",[e._v("所有内存缓冲区的文档都被写入到一个新的段。")]),e._v(" "),_("li",[e._v("缓冲区被清空。")]),e._v(" "),_("li",[e._v("一个提交点写入磁盘。")]),e._v(" "),_("li",[e._v("文件系统缓存通过"),_("code",[e._v("fsync")]),e._v("被刷新（"),_("code",[e._v("flush")]),e._v("）。")]),e._v(" "),_("li",[e._v("老的 "),_("code",[e._v("translog")]),e._v(" 被删除。")])]),e._v(" "),_("p",[_("code",[e._v("translog")]),e._v(" 提供所有还没有被刷到磁盘的操作的一个持久化记录。当 Elasticsearch 启动的时候，它会从磁盘中使用的最后一个提交点（"),_("code",[e._v("commit point")]),e._v("）去恢复已知的 "),_("code",[e._v("segment")]),e._v(" ，并且会重放 "),_("code",[e._v("translog")]),e._v(" 中所有在最后一次提交后发生的变更操作。")]),e._v(" "),_("p",[_("code",[e._v("translog")]),e._v(" 也被用来提供实时的CRUD，当我们通过"),_("code",[e._v("ID")]),e._v("进行查询、更新、删除一个文档、它会尝试在相应的 "),_("code",[e._v("segment")]),e._v(" 中检索之前，首先检查 "),_("code",[e._v("translog")]),e._v(" 中任何最近的变更操作。也就是说这个是可以实时获取到文档的最新版本。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/236b11e0-dfb3-4b0f-8faf-48991382c14e.png",alt:""}})]),e._v(" "),_("p",[e._v("最后送上一个我自己理解的图，参考了官网的描述，以及网上画的，如有错误欢迎指出。")]),e._v(" "),_("p",[e._v("如果感觉写的还不错，对你有帮助，欢迎点赞、转发、收藏，也可以评论互相交流。")]),e._v(" "),_("p",[e._v("也可以去搜索《醉鱼Java》点个关注，一起学习进步。")]),e._v(" "),_("p",[_("img",{attrs:{src:"https://files.mdnice.com/user/12687/4b0bf520-0287-4c5d-bb30-461ec2d726d2.png",alt:""}})]),e._v(" "),_("h1",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/8.12/mapping-routing-field.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/8.12/mapping-routing-field.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/8.12/indices-create-index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/8.12/indices-create-index.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/8.12/docs-index_.html#index-wait-for-active-shards",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/8.12/docs-index_.html#index-wait-for-active-shards"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/images/data_processing_flow.png",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/current/images/data_processing_flow.png"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/8.12/near-real-time.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/8.12/near-real-time.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/near-real-time.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/cn/elasticsearch/guide/current/near-real-time.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-merge.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-merge.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/translog.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/cn/elasticsearch/guide/current/translog.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://www.elastic.co/guide/cn/elasticsearch/guide/current/merge-process.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.elastic.co/guide/cn/elasticsearch/guide/current/merge-process.html"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"https://blog.csdn.net/R_P_J/article/details/82254494?spm=a2c6h.12873639.article-detail.13.46227f70mJejca",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://blog.csdn.net/R_P_J/article/details/82254494?spm=a2c6h.12873639.article-detail.13.46227f70mJejca"),_("OutboundLink")],1)]),e._v(" "),_("p",[_("a",{attrs:{href:"http://www.uml.org.cn/bigdata/201801263.asp?spm=a2c6h.12873639.article-detail.10.46227f70mJejca&file=201801263.asp",target:"_blank",rel:"noopener noreferrer"}},[e._v("http://www.uml.org.cn/bigdata/201801263.asp?spm=a2c6h.12873639.article-detail.10.46227f70mJejca&file=201801263.asp"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=t.exports}}]);