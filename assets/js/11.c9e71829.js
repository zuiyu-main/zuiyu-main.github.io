(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{419:function(e,a,t){e.exports=t.p+"assets/img/openes.8f13d653.png"},420:function(e,a,t){e.exports=t.p+"assets/img/setter-gradle.449a1dfc.png"},421:function(e,a,t){e.exports=t.p+"assets/img/setter-run-es.0d084d89.png"},445:function(e,a,t){"use strict";t.r(a);var s=t(2),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Elasticsearch 源码编译笔记")]),e._v(" "),a("h1",{attrs:{id:"_6-5"}},[e._v("6.5")]),e._v(" "),a("p",[e._v("https://www.elastic.co/blog/how-to-debug-elasticsearch-source-code-in-intellij-idea")]),e._v(" "),a("h2",{attrs:{id:"源码编译启动"}},[e._v("源码编译启动")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("环境")]),e._v(" "),a("ul",[a("li",[e._v("mac os 14")])])]),e._v(" "),a("li",[a("p",[e._v("jdk-11")]),e._v(" "),a("ul",[a("li",[e._v("gradle")])])]),e._v(" "),a("li",[a("p",[e._v("本地 拉取 elasticsearch 源码放置位置，下面配置都是此为基础 /cxt/codework/github/es65/elasticsearch，最后一级为源码根目录")])]),e._v(" "),a("li",[a("p",[e._v("gradle 安装配置阿里云地址加速")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("安装教程这里就不写了，百度下怎么安装就行版本我这安装的最新版")])]),e._v(" "),a("li",[a("p",[e._v("配置阿里云加速，找到安装的根目录，我这里是 /Users/cxt,在mac上就波浪线的目录,自己根据自己系统找到gradle安装目录即可")]),e._v(" "),a("p",[e._v("创建init.gradle")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /Users/cxt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 此目录下有个隐藏文件夹gradle,注意小数点")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" .gradle\n"),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("vim")]),e._v(" init.gradle \n")])])])]),e._v(" "),a("li",[a("p",[e._v("init.gradle 内容如下")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("allprojects{\n    repositories {\n        def ALIYUN_REPOSITORY_URL = 'https://maven.aliyun.com/repository/public/'\n        def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/'\n        def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'\n        def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'\n        all { ArtifactRepository repo ->\n            if(repo instanceof MavenArtifactRepository){\n                def url = repo.url.toString()\n                if (url.startsWith('https://repo1.maven.org/maven2/')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL.\"\n                    remove repo\n                }\n                if (url.startsWith('https://jcenter.bintray.com/')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL.\"\n                    remove repo\n                }\n                if (url.startsWith('https://dl.google.com/dl/android/maven2/')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_GOOGLE_URL.\"\n                    remove repo\n                }\n                if (url.startsWith('https://plugins.gradle.org/m2/')) {\n                    project.logger.lifecycle \"Repository ${repo.url} replaced by $ALIYUN_GRADLE_PLUGIN_URL.\"\n                    remove repo\n                }\n            }\n        }\n        maven { url ALIYUN_REPOSITORY_URL }\n        maven { url ALIYUN_JCENTER_URL }\n        maven { url ALIYUN_GOOGLE_URL }\n        maven { url ALIYUN_GRADLE_PLUGIN_URL }\n    }\n}\n")])])])])])]),e._v(" "),a("li",[a("p",[e._v("个人fork仓库已提交当前所有使用的文件，网速较快的小伙伴可以拉取参考一下")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("https://github.com/TianPuJun/elasticsearch/tree/6.5\n")])])])]),e._v(" "),a("li",[a("p",[e._v("拉取源码")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("https://github.com/elastic/elasticsearc\n")])])])]),e._v(" "),a("li",[a("p",[e._v("切换分支6.5")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("cd elasticsearch\ngit checkout 6.5\n")])])])]),e._v(" "),a("li",[a("p",[e._v("下载同版本二进制安装包为后面启动做准备,此处下载6.5.4的对应版本，6.5的最高子版本，其它版本可自行查阅")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz\n// 其它版本参考链接\nhttps://www.elastic.co/downloads/past-releases#elasticsearch\n")])])])]),e._v(" "),a("li",[a("p",[e._v("下载gradle-4.10-all.zip")]),e._v(" "),a("p",[e._v("为什么下载这个版本呢，是因为我在下载完elasticsearch源码之后，")]),e._v(" "),a("p",[e._v("查看elasticsearch/gradle/wrapper/gradle-wrapper.properties里面distributionUrl指定的为gradle-4.10-all.zip 鉴于国内网络原因，先下载下来，更改使用本地")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("下载gradle-4.10-all.zip")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("https://services.gradle.org/distributions/gradle-4.10-all.zip\n")])])])]),e._v(" "),a("li",[a("p",[e._v("复制gradle-4.10-all.zip到elasticsearch/gradle/wrapper/gradle-4.10-all.zip,与gradle-wrapper.properties同级")])]),e._v(" "),a("li",[a("p",[e._v("更改elasticsearch/gradle/wrapper/gradle-wrapper.properties内容如下,主要是distributionUrl指定同级别目录下的gradle-4.10-all.zip即可")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("distributionBase=GRADLE_USER_HOME\ndistributionPath=wrapper/dists\ndistributionUrl=gradle-4.10-all.zip\nzipStoreBase=GRADLE_USER_HOME\nzipStorePath=wrapper/dists\ndistributionSha256Sum=fc049dcbcb245d5892bebae143bd515a78f6a5a93cec99d489b312dc0ce4aad9\n\n")])])])])])]),e._v(" "),a("li",[a("p",[e._v("执行编译 为做导入idea做准备")]),e._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" elasticsearch\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 执行编译idea命令，如果报错可以根据提示加入命令参考排查，我这执行了一下./gradlew build 然后在执行gradle idea 就成功了")]),e._v("\n./gradlew idea\n")])])])]),e._v(" "),a("li",[a("p",[e._v("导入idea")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("上一步gradlew idea执行成功之后会在elasticsearch 目录下面生成一个"),a("code",[e._v("elasticsearch.ipr")]),e._v("文件，此时打开idea ，选择open 这个ipr文件即可自动导入")]),e._v(" "),a("p",[e._v("注意：此处导入方式可使用idea import Project ，但是本人在使用中发现导入不进去，然后使用open elasticsearch.ipr的方式可以正常启动，这个看个人情况吧")]),e._v(" "),a("p",[a("img",{attrs:{src:t(419),alt:"openes"}})])]),e._v(" "),a("li",[a("p",[e._v("导入之后选择右上角Project Structure ，设置项目JDK为11")])]),e._v(" "),a("li",[a("p",[e._v("打开gradle设置，设置gradle 中Grad 了JVM为 Use Project JDK")]),e._v(" "),a("p",[a("img",{attrs:{src:t(420),alt:"gradle设置"}})])])])]),e._v(" "),a("li",[a("p",[e._v("复制二进制安装文件导入源码编译文件夹")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("解压刚才下载的elasticsearch-6.5.4.tar.gz 压缩包")])]),e._v(" "),a("li",[a("p",[e._v("复制elasticsearch-6.5.4/config文件夹到源码elasticsearch/config")])]),e._v(" "),a("li",[a("p",[e._v("elasticsearch/config下新建java.policy")]),e._v(" "),a("p",[e._v("内容为")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('grant {\n    permission java.lang.RuntimePermission "createClassLoader";\n};\n')])])])]),e._v(" "),a("li",[a("p",[e._v("在源码elasticsearch文件夹下新建文件夹home")])]),e._v(" "),a("li",[a("p",[e._v("复制elastic search-6.5.4/modules到源码elasticsearch/home/modules")])]),e._v(" "),a("li",[a("p",[e._v("完成的目录结构大体如下")]),e._v(" "),a("p",[e._v("elasticsearch(6.5分支)")]),e._v(" "),a("p",[e._v("​\t------ config")]),e._v(" "),a("p",[e._v("​\t------ home")]),e._v(" "),a("p",[e._v("​\t\t------module")])])])]),e._v(" "),a("li",[a("p",[e._v("执行启动代码")]),e._v(" "),a("ul",[a("li",[e._v("启动类位置")])]),e._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[e._v("org"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("elasticsearch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("bootstrap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")])]),e._v("Elasticsearch")]),e._v("#main\n")])])]),a("ul",[a("li",[a("p",[e._v("编辑启动配置")]),e._v(" "),a("p",[e._v("VM options 加入参数,参数含义见下方启动问题解决模块解析")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-Des.path.conf=/cxt/codework/github/es65/elasticsearch/config \n-Des.path.home=/cxt/codework/github/es65/elasticsearch/home \n-Djava.security.policy=/cxt/codework/github/es65/elasticsearch/config/java.policy \n-Dlog4j2.disable.jmx=true\n")])])])]),e._v(" "),a("li",[a("p",[e._v("设置include dependencies")]),e._v(" "),a("p",[a("img",{attrs:{src:t(421),alt:"Es启动配置"}})])]),e._v(" "),a("li",[a("p",[e._v("启动es")]),e._v(" "),a("p",[e._v("执行main方法")])]),e._v(" "),a("li",[a("p",[e._v("访问 http://localhost:9200/  启动成功")])])])])]),e._v(" "),a("h3",{attrs:{id:"启动问题解决"}},[e._v("启动问题解决")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("问题1: the system property [es.path.conf] must be set")]),e._v(" "),a("p",[e._v("解决： 加入下方启动参数")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-Des.path.conf=/cxt/codework/github/es65/elasticsearch/config\n")])])])]),e._v(" "),a("li",[a("p",[e._v('问题2: Exception in thread "main" java.lang.IllegalStateException: path.home is not configured')]),e._v(" "),a("p",[e._v("解决： 加入下方启动参数")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-Des.path.home=/cxt/codework/github/es65/elasticsearch/home\n")])])])]),e._v(" "),a("li",[a("p",[e._v('问题3: Could not register mbeans java.security.AccessControlException: access denied ("javax.management.MBeanTrustPermission" "register")')]),e._v(" "),a("p",[e._v("解决：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("新建java.policy")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('grant {\n    permission java.lang.RuntimePermission "createClassLoader";\n};\n')])])])]),e._v(" "),a("li",[a("p",[e._v("加入启动参数")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("-Djava.security.policy=/cxt/codework/github/es65/elasticsearch/config/java.policy \n-Dlog4j2.disable.jmx=true\n")])])])])])]),e._v(" "),a("li",[a("p",[e._v("问题4: Plugin [percolator] was built for Elasticsearch version 6.5.4 but version 6.5.5 is running")]),e._v(" "),a("p",[e._v("解决：")]),e._v(" "),a("p",[e._v("注释掉 org.elasticsearch.plugins.PluginsService里面verifyCompatibility(bundle.plugin);这一行代码")])])]),e._v(" "),a("h2",{attrs:{id:"attach-进程调试-一种更简单的调试源码方式"}},[e._v("attach 进程调试（一种更简单的调试源码方式）")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("拉取代码切换分支启动debug调试")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("\ngit checkout 6.5 \n\n./gradlew run --debug-jvm \n")])])])]),e._v(" "),a("li",[a("p",[e._v("打开idea attach进程，位置Run-》Attach to Process，选中刚才启动的程序")])])]),e._v(" "),a("h1",{attrs:{id:"_6-5-api-调试"}},[e._v("6.5 API 调试")]),e._v(" "),a("h2",{attrs:{id:"index"}},[e._v("Index")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("位置")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("org.elasticsearch.rest.action.admin.indices.RestCreateIndexAction\n")])])])]),e._v(" "),a("li",[a("p",[e._v("调用链")]),e._v(" "),a("div",{staticClass:"language-text extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("1、RestController.dispatchRequest\n2、RestController.tryAllHandlers\n3、RestController.getAllHandlers(获取分发请求使用的handle，获取返回requestHandled=true停止循环)\n4、RestController.dispatchRequest\n5、BaseRestHandler.handleRequest\n6、RestIndexAction.prepareRequest（封装IndexRequest，注册响应回调类 RestStatusToXContentListener）\n7、RestStatusToXContentListener.buildResponse(封装响应)\n")])])])])]),e._v(" "),a("h2",{attrs:{id:"search"}},[e._v("Search")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("位置")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("org.elasticsearch.rest.action.search.RestSearchAction\n")])])])])])])}),[],!1,null,null,null);a.default=r.exports}}]);