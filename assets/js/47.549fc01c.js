(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{455:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"异步检索在-elasticsearch-中的理论与实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#异步检索在-elasticsearch-中的理论与实践"}},[s._v("#")]),s._v(" 异步检索在 Elasticsearch 中的理论与实践")]),s._v(" "),n("blockquote",[n("p",[s._v("https://www.elastic.co/guide/en/elasticsearch/reference/8.1/async-search.html#submit-async-search")])]),s._v(" "),n("h2",{attrs:{id:"引言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),n("p",[s._v("Elasticsearch 是一种强大的分布式搜索和分析引擎，它能够快速地存储、搜索和分析大量数据。在处理大规模数据时，性能和响应时间变得至关重要。为了提高搜索和查询操作的效率，Elasticsearch 支持异步检索。本文将深入探讨异步检索在 Elasticsearch 中的理论原理，展示如何在实践中使用它，并提供使用场景和注意事项。")]),s._v(" "),n("h2",{attrs:{id:"什么是异步检索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是异步检索"}},[s._v("#")]),s._v(" 什么是异步检索？")]),s._v(" "),n("p",[s._v("在传统的同步搜索中，当客户端发出一个查询请求后，它需要等待 Elasticsearch 返回所有匹配结果才能继续处理其他任务。而异步检索允许客户端发起一个查询请求后，不必等待搜索结果立即返回，而是可以继续执行其他操作。Elasticsearch 在后台处理这个查询请求，当查询完成后，客户端会得到一个响应。")]),s._v(" "),n("p",[s._v("异步检索的优点在于它能够显著提高搜索和查询操作的性能和响应时间，特别是在处理大量数据或复杂查询时。")]),s._v(" "),n("h2",{attrs:{id:"添加测试数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加测试数据"}},[s._v("#")]),s._v(" 添加测试数据")]),s._v(" "),n("p",[s._v("使用"),n("code",[s._v("python3")]),s._v("脚本完成，根据"),n("code",[s._v("github")]),s._v("修改而来")]),s._v(" "),n("blockquote",[n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("https")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("github"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("oliver006"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("elasticsearch"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("test"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("data\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])]),s._v(" "),n("p",[s._v("生成测试数据脚本见文章末尾")]),s._v(" "),n("p",[s._v("执行命令")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("python3 es_test_data.py --es_url=http://127.0.0.1:9200 --count=1000000\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"如何使用异步检索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何使用异步检索"}},[s._v("#")]),s._v(" 如何使用异步检索？")]),s._v(" "),n("h3",{attrs:{id:"_1-创建异步搜索任务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建异步搜索任务"}},[s._v("#")]),s._v(" 1. 创建异步搜索任务")]),s._v(" "),n("p",[s._v("在 Elasticsearch 中，使用异步检索需要创建一个异步搜索任务。你可以通过发送一个异步搜索请求来创建任务。以下是一个使用 Elasticsearch 的 REST API 发起异步搜索请求的示例：")]),s._v(" "),n("div",{staticClass:"language-http line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-http"}},[n("code",[s._v('POST /test_data/_async_search?size=0\n{\n  "sort": [\n    { "last_updated": { "order": "asc" } }\n  ],\n  "aggs": {\n    "sale_date": {\n      "date_histogram": {\n        "field": "last_updated",\n        "calendar_interval": "1d"\n      }\n    }\n  }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("在上述示例中，我们向名为"),n("code",[s._v("test_data")]),s._v(" 的索引提交了一个异步搜索请求，该请求使用简单的匹配查询来查找包含特定值的文档。")]),s._v(" "),n("p",[s._v("相应内容如下，注意"),n("code",[s._v("ID")]),s._v("的值即可")]),s._v(" "),n("blockquote",[n("p",[s._v("如果看不到"),n("code",[s._v("ID")]),s._v("的值，再加一部分数据量再次检索即可")])]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n  "id" : "FjU0SDlRSFZ2UTdxZUpkaFdLSF9hOVEdZzBVS3hmd1FTWEc3VmpCc1gzZFZhdzo2NDI0Mzg=",\n  "is_partial" : true,\n  "is_running" : true,\n  "start_time_in_millis" : 1690808656033,\n  "expiration_time_in_millis" : 1691240656033,\n  "response" : {\n    "took" : 1001,\n    "timed_out" : false,\n    "terminated_early" : false,\n    "num_reduce_phases" : 0,\n    "_shards" : {\n      "total" : 1,\n      "successful" : 0,\n      "skipped" : 0,\n      "failed" : 0\n    },\n    "hits" : {\n      "total" : {\n        "value" : 0,\n        "relation" : "gte"\n      },\n      "max_score" : null,\n      "hits" : [ ]\n    }\n  }\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])]),n("h3",{attrs:{id:"_2-获取异步搜索结果"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-获取异步搜索结果"}},[s._v("#")]),s._v(" 2. 获取异步搜索结果")]),s._v(" "),n("p",[s._v("一旦创建了异步搜索任务，你可以轮询获取任务的结果。Elasticsearch 返回一个任务 ID（上一步返回的ID），你可以使用这个 ID 来检索结果。以下是获取异步搜索结果的示例：")]),s._v(" "),n("div",{staticClass:"language-http line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-http"}},[n("code",[s._v("GET /_async_search/<task_id>\n\nGET /_async_search/FjU0SDlRSFZ2UTdxZUpkaFdLSF9hOVEdZzBVS3hmd1FTWEc3VmpCc1gzZFZhdzo2NDI0Mzg=\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("在上述示例中，我们使用 "),n("code",[s._v("<task_id>")]),s._v(" 来获取异步搜索任务的状态。")]),s._v(" "),n("h3",{attrs:{id:"_3-获取异步搜索的状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-获取异步搜索的状态"}},[s._v("#")]),s._v(" 3. 获取异步搜索的状态")]),s._v(" "),n("p",[s._v("获取异步搜索结果后，可以对结果进行处理和解析。通常，结果会以 JSON 格式返回，其中包含搜索的匹配文档、聚合信息等。仅仅是在url中加入status")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("GET /_async_search/status/FjU0SDlRSFZ2UTdxZUpkaFdLSF9hOVEdZzBVS3hmd1FTWEc3VmpCc1gzZFZhdzo2NDI0Mzg=\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("返回结果如下")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('{\n  "id" : "FjU0SDlRSFZ2UTdxZUpkaFdLSF9hOVEdZzBVS3hmd1FTWEc3VmpCc1gzZFZhdzo2NDI0Mzg=",\n  "is_running" : false,\n  "is_partial" : false,\n  "start_time_in_millis" : 1690808656033,\n  "expiration_time_in_millis" : 1691240656033,\n  "_shards" : {\n    "total" : 1,\n    "successful" : 1,\n    "skipped" : 0,\n    "failed" : 0\n  },\n  "completion_status" : 200\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"_4-删除异步检索"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除异步检索"}},[s._v("#")]),s._v(" 4. 删除异步检索")]),s._v(" "),n("div",{staticClass:"language-text line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("DELETE /_async_search/FjU0SDlRSFZ2UTdxZUpkaFdLSF9hOVEdZzBVS3hmd1FTWEc3VmpCc1gzZFZhdzo2NDI0Mzg=\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h2",{attrs:{id:"使用场景"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用场景"}},[s._v("#")]),s._v(" 使用场景")]),s._v(" "),n("p",[s._v("异步检索在以下场景中特别有用：")]),s._v(" "),n("ol",[n("li",[n("p",[n("strong",[s._v("大数据量搜索：")]),s._v(" 当索引包含大量数据时，同步搜索可能会导致请求阻塞并增加响应时间。异步检索能够提高搜索性能，让客户端可以并发处理其他任务。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("复杂查询：")]),s._v(" 复杂的搜索查询可能需要更长的处理时间。通过使用异步检索，可以避免客户端长时间等待，提高用户体验。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("定时任务：")]),s._v(" 如果你需要定期执行一些查询，并将结果导出或进行其他操作，异步检索可以让你更加灵活地处理这些任务。")])])]),s._v(" "),n("h2",{attrs:{id:"使用注意事项"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用注意事项"}},[s._v("#")]),s._v(" 使用注意事项")]),s._v(" "),n("p",[s._v("虽然异步检索提供了很多好处，但在使用时也需要注意以下事项：")]),s._v(" "),n("ol",[n("li",[n("p",[n("strong",[s._v("任务状态管理：")]),s._v(" 确保正确地管理异步搜索任务的状态。任务可能处于不同的状态，包括运行中、完成和失败。及时清理已经完成或失败的任务，避免资源浪费。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("任务结果有效性：")]),s._v(" 确保处理异步搜索结果时，对结果进行有效性验证和解析。避免因错误处理结果而导致数据不一致或错误的分析。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("资源限制：")]),s._v(" 异步检索仍然占用服务器资源，特别是在处理大量并发任务时。确保服务器资源足够以支持异步检索的需求。")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("超时和重试：")]),s._v(" 考虑到网络或其他故障可能导致异步搜索请求失败，需要合理设置超时时间并实现重试机制，以确保请求的可靠性。")])])]),s._v(" "),n("h2",{attrs:{id:"结论"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[s._v("#")]),s._v(" 结论")]),s._v(" "),n("p",[s._v("异步检索是 Elasticsearch 中一个强大且实用的特性，可以显著提高搜索和查询操作的性能，特别在处理大规模数据或复杂查询时。在使用异步检索时，注意合理管理任务状态、验证结果有效性，并注意资源限制和错误处理。合理地应用异步检索，能为我们的应用程序带来更高效的搜索和分析功能。")]),s._v(" "),n("h1",{attrs:{id:"测试脚本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#测试脚本"}},[s._v("#")]),s._v(" 测试脚本")]),s._v(" "),n("div",{staticClass:"language-pyth line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('#!/usr/bin/python\n\nimport nest_asyncio\nnest_asyncio.apply()\n\nimport json\nimport csv\nimport time\nimport logging\nimport random\nimport string\nimport uuid\nimport datetime\n\nimport tornado.gen\nimport tornado.httpclient\nimport tornado.ioloop\nimport tornado.options\n\ntry:\n    xrange\n    range = xrange\nexcept NameError:\n    pass\n\nasync_http_client = tornado.httpclient.AsyncHTTPClient()\nheaders = tornado.httputil.HTTPHeaders({"content-type": "application/json"})\nid_counter = 0\nupload_data_count = 0\n_dict_data = None\n\n\n\ndef delete_index(idx_name):\n    try:\n        url = "%s/%s?refresh=true" % (tornado.options.options.es_url, idx_name)\n        request = tornado.httpclient.HTTPRequest(url, headers=headers, method="DELETE", request_timeout=240, auth_username=tornado.options.options.username, auth_password=tornado.options.options.password, validate_cert=tornado.options.options.validate_cert)\n        response = tornado.httpclient.HTTPClient().fetch(request)\n        logging.info(\'Deleting index  "%s" done   %s\' % (idx_name, response.body))\n    except tornado.httpclient.HTTPError:\n        pass\n\n\ndef create_index(idx_name):\n    schema = {\n        "settings": {\n            "number_of_shards":   tornado.options.options.num_of_shards,\n            "number_of_replicas": tornado.options.options.num_of_replicas\n        },\n        "refresh": True\n    }\n\n    body = json.dumps(schema)\n    url = "%s/%s" % (tornado.options.options.es_url, idx_name)\n    try:\n        logging.info(\'Trying to create index %s\' % (url))\n        request = tornado.httpclient.HTTPRequest(url, headers=headers, method="PUT", body=body, request_timeout=240, auth_username=tornado.options.options.username, auth_password=tornado.options.options.password, validate_cert=tornado.options.options.validate_cert)\n        response = tornado.httpclient.HTTPClient().fetch(request)\n        logging.info(\'Creating index "%s" done   %s\' % (idx_name, response.body))\n    except tornado.httpclient.HTTPError:\n        logging.info(\'Looks like the index exists already\')\n        pass\n\n\n@tornado.gen.coroutine\ndef upload_batch(upload_data_txt):\n    try:\n        request = tornado.httpclient.HTTPRequest(tornado.options.options.es_url + "/_bulk",\n                                                 method="POST",\n                                                 body=upload_data_txt,\n                                                 headers=headers,\n                                                 request_timeout=tornado.options.options.http_upload_timeout,\n                                                 auth_username=tornado.options.options.username, auth_password=tornado.options.options.password, validate_cert=tornado.options.options.validate_cert)\n        response = yield async_http_client.fetch(request)\n    except Exception as ex:\n        logging.error("upload failed, error: %s" % ex)\n        return\n\n    result = json.loads(response.body.decode(\'utf-8\'))\n    res_txt = "OK" if not result[\'errors\'] else "FAILED"\n    took = int(result[\'took\'])\n    logging.info("Upload: %s - upload took: %5dms, total docs uploaded: %7d" % (res_txt, took, upload_data_count))\n\n\ndef get_data_for_format(format):\n    split_f = format.split(":")\n    if not split_f:\n        return None, None\n\n    field_name = split_f[0]\n    field_type = split_f[1]\n\n    return_val = \'\'\n\n    if field_type == \'arr\':\n        return_val = []\n        array_len_expr = split_f[2]\n        if \'-\' in array_len_expr:\n            (min,max) = array_len_expr.split(\'-\')\n            array_len = generate_count(int(min), int(max))\n        else:\n            array_len = int(array_len_expr)\n\n        single_elem_format = field_name + \':\' + format[len(field_name) + len(field_type) + len(array_len_expr) + 3 : ]\n        for i in range(array_len):\n            x = get_data_for_format(single_elem_format)\n            return_val.append(x[1])\n\n    elif field_type == "bool":\n        return_val = random.choice([True, False])\n\n    elif field_type == "str":\n        min = 3 if len(split_f) < 3 else int(split_f[2])\n        max = min + 7 if len(split_f) < 4 else int(split_f[3])\n        length = generate_count(min, max)\n        return_val = "".join([random.choice(string.ascii_letters + string.digits) for x in range(length)])\n\n    elif field_type == "int":\n        min = 0 if len(split_f) < 3 else int(split_f[2])\n        max = min + 100000 if len(split_f) < 4 else int(split_f[3])\n        return_val = generate_count(min, max)\n    \n    elif field_type == "ipv4":\n        return_val = "{0}.{1}.{2}.{3}".format(generate_count(0, 245),generate_count(0, 245),generate_count(0, 245),generate_count(0, 245))\n\n    elif field_type in ["ts", "tstxt"]:\n        now = int(time.time())\n        per_day = 24 * 60 * 60\n        min = now - 30 * per_day if len(split_f) < 3 else int(split_f[2])\n        max = now + 30 * per_day if len(split_f) < 4 else int(split_f[3])\n        ts = generate_count(min, max)\n        return_val = int(ts * 1000) if field_type == "ts" else datetime.datetime.fromtimestamp(ts).strftime("%Y-%m-%dT%H:%M:%S.000-0000")\n\n    elif field_type == "words":\n        min = 2 if len(split_f) < 3 else int(split_f[2])\n        max = min + 8 if len(split_f) < 4 else int(split_f[3])\n        count = generate_count(min, max)\n        words = []\n        for _ in range(count):\n            word_len = random.randrange(3, 10)\n            words.append("".join([random.choice(string.ascii_letters + string.digits) for x in range(word_len)]))\n        return_val = " ".join(words)\n\n    elif field_type == "dict":\n        global _dict_data\n        min = 2 if len(split_f) < 3 else int(split_f[2])\n        max = min + 8 if len(split_f) < 4 else int(split_f[3])\n        count = generate_count(min, max)\n        return_val = " ".join([random.choice(_dict_data).strip() for _ in range(count)])\n\n    elif field_type == "text":\n        text = ["text1", "text2", "text3"] if len(split_f) < 3 else split_f[2].split("-")\n        min = 1 if len(split_f) < 4 else int(split_f[3])\n        max = min + 1 if len(split_f) < 5 else int(split_f[4])\n        count = generate_count(min, max)\n        words = []\n        for _ in range(count):\n            words.append(""+random.choice(text))\n        return_val = " ".join(words)\n\n    return field_name, return_val\n\n\ndef generate_count(min, max):\n    if min == max:\n        return max\n    elif min > max:\n        return random.randrange(max, min);\n    else:\n        return random.randrange(min, max);\n\n\ndef generate_random_doc(format):\n    global id_counter\n\n    res = {}\n\n    for f in format:\n        f_key, f_val = get_data_for_format(f)\n        if f_key:\n            res[f_key] = f_val\n\n    if not tornado.options.options.id_type:\n        return res\n\n    if tornado.options.options.id_type == \'int\':\n        res[\'_id\'] = id_counter\n        id_counter += 1\n    elif tornado.options.options.id_type == \'uuid4\':\n        res[\'_id\'] = str(uuid.uuid4())\n\n    return res\n\n\ndef set_index_refresh(val):\n\n    params = {"index": {"refresh_interval": val}}\n    body = json.dumps(params)\n    url = "%s/%s/_settings" % (tornado.options.options.es_url, tornado.options.options.index_name)\n    try:\n        request = tornado.httpclient.HTTPRequest(url, headers=headers, method="PUT", body=body, request_timeout=240, auth_username=tornado.options.options.username, auth_password=tornado.options.options.password, validate_cert=tornado.options.options.validate_cert)\n        http_client = tornado.httpclient.HTTPClient()\n        http_client.fetch(request)\n        logging.info(\'Set index refresh to %s\' % val)\n    except Exception as ex:\n        logging.exception(ex)\n\n\ndef csv_file_to_json(csvFilePath):\n    data = []\n\n    # Open a csv reader called DictReader\n    with open(csvFilePath, encoding=\'utf-8\') as csvf:\n        csvReader = csv.DictReader(csvf)\n        for rows in csvReader:\n            data.append(rows)\n\n    return json.dumps(data)\n\n\n@tornado.gen.coroutine\ndef generate_test_data():\n\n    global upload_data_count\n\n    if tornado.options.options.force_init_index:\n        delete_index(tornado.options.options.index_name)\n\n    create_index(tornado.options.options.index_name)\n\n    # todo: query what refresh is set to, then restore later\n    if tornado.options.options.set_refresh:\n        set_index_refresh("-1")\n\n    if tornado.options.options.out_file:\n        out_file = open(tornado.options.options.out_file, "w")\n    else:\n        out_file = None\n\n    if tornado.options.options.dict_file:\n        global _dict_data\n        with open(tornado.options.options.dict_file, \'r\') as f:\n            _dict_data = f.readlines()\n        logging.info("Loaded %d words from the %s" % (len(_dict_data), tornado.options.options.dict_file))\n\n    format = tornado.options.options.format.split(\',\')\n    if not format:\n        logging.error(\'invalid format\')\n        exit(1)\n\n    ts_start = int(time.time())\n    upload_data_txt = ""\n\n    if tornado.options.options.data_file:\n        json_array = ""\n        if tornado.options.options.data_file.endswith(".csv"):\n            json_array = json.loads(csv_file_to_json(tornado.options.options.data_file))\n        else:\n            with open(tornado.options.options.data_file, \'r\') as f:\n                json_array = json.load(f)\n            logging.info("Loaded documents from the %s", tornado.options.options.data_file)\n\n        for item in json_array:\n            cmd = {\'index\': {\'_index\': tornado.options.options.index_name}}\n                             # \'_type\': tornado.options.options.index_type}}\n            if \'_id\' in item:\n                cmd[\'index\'][\'_id\'] = item[\'_id\']\n\n            upload_data_txt += json.dumps(cmd) + "\\n"\n            upload_data_txt += json.dumps(item) + "\\n"\n\n        if upload_data_txt:\n            yield upload_batch(upload_data_txt)\n    else:\n        logging.info("Generating %d docs, upload batch size is %d" % (tornado.options.options.count,\n                                                                      tornado.options.options.batch_size))\n        for num in range(0, tornado.options.options.count):\n\n            item = generate_random_doc(format)\n\n            if out_file:\n                out_file.write("%s\\n" % json.dumps(item))\n\n            cmd = {\'index\': {\'_index\': tornado.options.options.index_name}}\n                             # \'_type\': tornado.options.options.index_type}}\n            if \'_id\' in item:\n                cmd[\'index\'][\'_id\'] = item[\'_id\']\n\n            upload_data_txt += json.dumps(cmd) + "\\n"\n            upload_data_txt += json.dumps(item) + "\\n"\n            upload_data_count += 1\n\n            if upload_data_count % tornado.options.options.batch_size == 0:\n                yield upload_batch(upload_data_txt)\n                upload_data_txt = ""\n\n        # upload remaining items in `upload_data_txt`\n        if upload_data_txt:\n            yield upload_batch(upload_data_txt)\n\n    if tornado.options.options.set_refresh:\n        set_index_refresh("1s")\n\n    if out_file:\n        out_file.close()\n\n    took_secs = int(time.time() - ts_start)\n\n    logging.info("Done - total docs uploaded: %d, took %d seconds" % (tornado.options.options.count, took_secs))\n\n\nif __name__ == \'__main__\':\n    tornado.options.define("es_url", type=str, default=\'http://localhost:9200\', help="URL of your Elasticsearch node")\n    tornado.options.define("index_name", type=str, default=\'test_data\', help="Name of the index to store your messages")\n    tornado.options.define("index_type", type=str, default=\'test_type\', help="Type")\n    tornado.options.define("batch_size", type=int, default=1000, help="Elasticsearch bulk index batch size")\n    tornado.options.define("num_of_shards", type=int, default=2, help="Number of shards for ES index")\n    tornado.options.define("http_upload_timeout", type=int, default=3, help="Timeout in seconds when uploading data")\n    tornado.options.define("count", type=int, default=100000, help="Number of docs to generate")\n    tornado.options.define("format", type=str, default=\'name:str,age:int,last_updated:ts\', help="message format")\n    tornado.options.define("num_of_replicas", type=int, default=0, help="Number of replicas for ES index")\n    tornado.options.define("force_init_index", type=bool, default=False, help="Force deleting and re-initializing the Elasticsearch index")\n    tornado.options.define("set_refresh", type=bool, default=False, help="Set refresh rate to -1 before starting the upload")\n    tornado.options.define("out_file", type=str, default=False, help="If set, write test data to out_file as well.")\n    tornado.options.define("id_type", type=str, default=None, help="Type of \'id\' to use for the docs, valid settings are int and uuid4, None is default")\n    tornado.options.define("dict_file", type=str, default=None, help="Name of dictionary file to use")\n    tornado.options.define("data_file", type=str, default=None, help="Name of the documents file to use")\n    tornado.options.define("username", type=str, default=None, help="Username for elasticsearch")\n    tornado.options.define("password", type=str, default=None, help="Password for elasticsearch")\n    tornado.options.define("validate_cert", type=bool, default=True, help="SSL validate_cert for requests. Use false for self-signed certificates.")\n    tornado.options.parse_command_line()\n\n    tornado.ioloop.IOLoop.instance().run_sync(generate_test_data)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br"),n("span",{staticClass:"line-number"},[s._v("67")]),n("br"),n("span",{staticClass:"line-number"},[s._v("68")]),n("br"),n("span",{staticClass:"line-number"},[s._v("69")]),n("br"),n("span",{staticClass:"line-number"},[s._v("70")]),n("br"),n("span",{staticClass:"line-number"},[s._v("71")]),n("br"),n("span",{staticClass:"line-number"},[s._v("72")]),n("br"),n("span",{staticClass:"line-number"},[s._v("73")]),n("br"),n("span",{staticClass:"line-number"},[s._v("74")]),n("br"),n("span",{staticClass:"line-number"},[s._v("75")]),n("br"),n("span",{staticClass:"line-number"},[s._v("76")]),n("br"),n("span",{staticClass:"line-number"},[s._v("77")]),n("br"),n("span",{staticClass:"line-number"},[s._v("78")]),n("br"),n("span",{staticClass:"line-number"},[s._v("79")]),n("br"),n("span",{staticClass:"line-number"},[s._v("80")]),n("br"),n("span",{staticClass:"line-number"},[s._v("81")]),n("br"),n("span",{staticClass:"line-number"},[s._v("82")]),n("br"),n("span",{staticClass:"line-number"},[s._v("83")]),n("br"),n("span",{staticClass:"line-number"},[s._v("84")]),n("br"),n("span",{staticClass:"line-number"},[s._v("85")]),n("br"),n("span",{staticClass:"line-number"},[s._v("86")]),n("br"),n("span",{staticClass:"line-number"},[s._v("87")]),n("br"),n("span",{staticClass:"line-number"},[s._v("88")]),n("br"),n("span",{staticClass:"line-number"},[s._v("89")]),n("br"),n("span",{staticClass:"line-number"},[s._v("90")]),n("br"),n("span",{staticClass:"line-number"},[s._v("91")]),n("br"),n("span",{staticClass:"line-number"},[s._v("92")]),n("br"),n("span",{staticClass:"line-number"},[s._v("93")]),n("br"),n("span",{staticClass:"line-number"},[s._v("94")]),n("br"),n("span",{staticClass:"line-number"},[s._v("95")]),n("br"),n("span",{staticClass:"line-number"},[s._v("96")]),n("br"),n("span",{staticClass:"line-number"},[s._v("97")]),n("br"),n("span",{staticClass:"line-number"},[s._v("98")]),n("br"),n("span",{staticClass:"line-number"},[s._v("99")]),n("br"),n("span",{staticClass:"line-number"},[s._v("100")]),n("br"),n("span",{staticClass:"line-number"},[s._v("101")]),n("br"),n("span",{staticClass:"line-number"},[s._v("102")]),n("br"),n("span",{staticClass:"line-number"},[s._v("103")]),n("br"),n("span",{staticClass:"line-number"},[s._v("104")]),n("br"),n("span",{staticClass:"line-number"},[s._v("105")]),n("br"),n("span",{staticClass:"line-number"},[s._v("106")]),n("br"),n("span",{staticClass:"line-number"},[s._v("107")]),n("br"),n("span",{staticClass:"line-number"},[s._v("108")]),n("br"),n("span",{staticClass:"line-number"},[s._v("109")]),n("br"),n("span",{staticClass:"line-number"},[s._v("110")]),n("br"),n("span",{staticClass:"line-number"},[s._v("111")]),n("br"),n("span",{staticClass:"line-number"},[s._v("112")]),n("br"),n("span",{staticClass:"line-number"},[s._v("113")]),n("br"),n("span",{staticClass:"line-number"},[s._v("114")]),n("br"),n("span",{staticClass:"line-number"},[s._v("115")]),n("br"),n("span",{staticClass:"line-number"},[s._v("116")]),n("br"),n("span",{staticClass:"line-number"},[s._v("117")]),n("br"),n("span",{staticClass:"line-number"},[s._v("118")]),n("br"),n("span",{staticClass:"line-number"},[s._v("119")]),n("br"),n("span",{staticClass:"line-number"},[s._v("120")]),n("br"),n("span",{staticClass:"line-number"},[s._v("121")]),n("br"),n("span",{staticClass:"line-number"},[s._v("122")]),n("br"),n("span",{staticClass:"line-number"},[s._v("123")]),n("br"),n("span",{staticClass:"line-number"},[s._v("124")]),n("br"),n("span",{staticClass:"line-number"},[s._v("125")]),n("br"),n("span",{staticClass:"line-number"},[s._v("126")]),n("br"),n("span",{staticClass:"line-number"},[s._v("127")]),n("br"),n("span",{staticClass:"line-number"},[s._v("128")]),n("br"),n("span",{staticClass:"line-number"},[s._v("129")]),n("br"),n("span",{staticClass:"line-number"},[s._v("130")]),n("br"),n("span",{staticClass:"line-number"},[s._v("131")]),n("br"),n("span",{staticClass:"line-number"},[s._v("132")]),n("br"),n("span",{staticClass:"line-number"},[s._v("133")]),n("br"),n("span",{staticClass:"line-number"},[s._v("134")]),n("br"),n("span",{staticClass:"line-number"},[s._v("135")]),n("br"),n("span",{staticClass:"line-number"},[s._v("136")]),n("br"),n("span",{staticClass:"line-number"},[s._v("137")]),n("br"),n("span",{staticClass:"line-number"},[s._v("138")]),n("br"),n("span",{staticClass:"line-number"},[s._v("139")]),n("br"),n("span",{staticClass:"line-number"},[s._v("140")]),n("br"),n("span",{staticClass:"line-number"},[s._v("141")]),n("br"),n("span",{staticClass:"line-number"},[s._v("142")]),n("br"),n("span",{staticClass:"line-number"},[s._v("143")]),n("br"),n("span",{staticClass:"line-number"},[s._v("144")]),n("br"),n("span",{staticClass:"line-number"},[s._v("145")]),n("br"),n("span",{staticClass:"line-number"},[s._v("146")]),n("br"),n("span",{staticClass:"line-number"},[s._v("147")]),n("br"),n("span",{staticClass:"line-number"},[s._v("148")]),n("br"),n("span",{staticClass:"line-number"},[s._v("149")]),n("br"),n("span",{staticClass:"line-number"},[s._v("150")]),n("br"),n("span",{staticClass:"line-number"},[s._v("151")]),n("br"),n("span",{staticClass:"line-number"},[s._v("152")]),n("br"),n("span",{staticClass:"line-number"},[s._v("153")]),n("br"),n("span",{staticClass:"line-number"},[s._v("154")]),n("br"),n("span",{staticClass:"line-number"},[s._v("155")]),n("br"),n("span",{staticClass:"line-number"},[s._v("156")]),n("br"),n("span",{staticClass:"line-number"},[s._v("157")]),n("br"),n("span",{staticClass:"line-number"},[s._v("158")]),n("br"),n("span",{staticClass:"line-number"},[s._v("159")]),n("br"),n("span",{staticClass:"line-number"},[s._v("160")]),n("br"),n("span",{staticClass:"line-number"},[s._v("161")]),n("br"),n("span",{staticClass:"line-number"},[s._v("162")]),n("br"),n("span",{staticClass:"line-number"},[s._v("163")]),n("br"),n("span",{staticClass:"line-number"},[s._v("164")]),n("br"),n("span",{staticClass:"line-number"},[s._v("165")]),n("br"),n("span",{staticClass:"line-number"},[s._v("166")]),n("br"),n("span",{staticClass:"line-number"},[s._v("167")]),n("br"),n("span",{staticClass:"line-number"},[s._v("168")]),n("br"),n("span",{staticClass:"line-number"},[s._v("169")]),n("br"),n("span",{staticClass:"line-number"},[s._v("170")]),n("br"),n("span",{staticClass:"line-number"},[s._v("171")]),n("br"),n("span",{staticClass:"line-number"},[s._v("172")]),n("br"),n("span",{staticClass:"line-number"},[s._v("173")]),n("br"),n("span",{staticClass:"line-number"},[s._v("174")]),n("br"),n("span",{staticClass:"line-number"},[s._v("175")]),n("br"),n("span",{staticClass:"line-number"},[s._v("176")]),n("br"),n("span",{staticClass:"line-number"},[s._v("177")]),n("br"),n("span",{staticClass:"line-number"},[s._v("178")]),n("br"),n("span",{staticClass:"line-number"},[s._v("179")]),n("br"),n("span",{staticClass:"line-number"},[s._v("180")]),n("br"),n("span",{staticClass:"line-number"},[s._v("181")]),n("br"),n("span",{staticClass:"line-number"},[s._v("182")]),n("br"),n("span",{staticClass:"line-number"},[s._v("183")]),n("br"),n("span",{staticClass:"line-number"},[s._v("184")]),n("br"),n("span",{staticClass:"line-number"},[s._v("185")]),n("br"),n("span",{staticClass:"line-number"},[s._v("186")]),n("br"),n("span",{staticClass:"line-number"},[s._v("187")]),n("br"),n("span",{staticClass:"line-number"},[s._v("188")]),n("br"),n("span",{staticClass:"line-number"},[s._v("189")]),n("br"),n("span",{staticClass:"line-number"},[s._v("190")]),n("br"),n("span",{staticClass:"line-number"},[s._v("191")]),n("br"),n("span",{staticClass:"line-number"},[s._v("192")]),n("br"),n("span",{staticClass:"line-number"},[s._v("193")]),n("br"),n("span",{staticClass:"line-number"},[s._v("194")]),n("br"),n("span",{staticClass:"line-number"},[s._v("195")]),n("br"),n("span",{staticClass:"line-number"},[s._v("196")]),n("br"),n("span",{staticClass:"line-number"},[s._v("197")]),n("br"),n("span",{staticClass:"line-number"},[s._v("198")]),n("br"),n("span",{staticClass:"line-number"},[s._v("199")]),n("br"),n("span",{staticClass:"line-number"},[s._v("200")]),n("br"),n("span",{staticClass:"line-number"},[s._v("201")]),n("br"),n("span",{staticClass:"line-number"},[s._v("202")]),n("br"),n("span",{staticClass:"line-number"},[s._v("203")]),n("br"),n("span",{staticClass:"line-number"},[s._v("204")]),n("br"),n("span",{staticClass:"line-number"},[s._v("205")]),n("br"),n("span",{staticClass:"line-number"},[s._v("206")]),n("br"),n("span",{staticClass:"line-number"},[s._v("207")]),n("br"),n("span",{staticClass:"line-number"},[s._v("208")]),n("br"),n("span",{staticClass:"line-number"},[s._v("209")]),n("br"),n("span",{staticClass:"line-number"},[s._v("210")]),n("br"),n("span",{staticClass:"line-number"},[s._v("211")]),n("br"),n("span",{staticClass:"line-number"},[s._v("212")]),n("br"),n("span",{staticClass:"line-number"},[s._v("213")]),n("br"),n("span",{staticClass:"line-number"},[s._v("214")]),n("br"),n("span",{staticClass:"line-number"},[s._v("215")]),n("br"),n("span",{staticClass:"line-number"},[s._v("216")]),n("br"),n("span",{staticClass:"line-number"},[s._v("217")]),n("br"),n("span",{staticClass:"line-number"},[s._v("218")]),n("br"),n("span",{staticClass:"line-number"},[s._v("219")]),n("br"),n("span",{staticClass:"line-number"},[s._v("220")]),n("br"),n("span",{staticClass:"line-number"},[s._v("221")]),n("br"),n("span",{staticClass:"line-number"},[s._v("222")]),n("br"),n("span",{staticClass:"line-number"},[s._v("223")]),n("br"),n("span",{staticClass:"line-number"},[s._v("224")]),n("br"),n("span",{staticClass:"line-number"},[s._v("225")]),n("br"),n("span",{staticClass:"line-number"},[s._v("226")]),n("br"),n("span",{staticClass:"line-number"},[s._v("227")]),n("br"),n("span",{staticClass:"line-number"},[s._v("228")]),n("br"),n("span",{staticClass:"line-number"},[s._v("229")]),n("br"),n("span",{staticClass:"line-number"},[s._v("230")]),n("br"),n("span",{staticClass:"line-number"},[s._v("231")]),n("br"),n("span",{staticClass:"line-number"},[s._v("232")]),n("br"),n("span",{staticClass:"line-number"},[s._v("233")]),n("br"),n("span",{staticClass:"line-number"},[s._v("234")]),n("br"),n("span",{staticClass:"line-number"},[s._v("235")]),n("br"),n("span",{staticClass:"line-number"},[s._v("236")]),n("br"),n("span",{staticClass:"line-number"},[s._v("237")]),n("br"),n("span",{staticClass:"line-number"},[s._v("238")]),n("br"),n("span",{staticClass:"line-number"},[s._v("239")]),n("br"),n("span",{staticClass:"line-number"},[s._v("240")]),n("br"),n("span",{staticClass:"line-number"},[s._v("241")]),n("br"),n("span",{staticClass:"line-number"},[s._v("242")]),n("br"),n("span",{staticClass:"line-number"},[s._v("243")]),n("br"),n("span",{staticClass:"line-number"},[s._v("244")]),n("br"),n("span",{staticClass:"line-number"},[s._v("245")]),n("br"),n("span",{staticClass:"line-number"},[s._v("246")]),n("br"),n("span",{staticClass:"line-number"},[s._v("247")]),n("br"),n("span",{staticClass:"line-number"},[s._v("248")]),n("br"),n("span",{staticClass:"line-number"},[s._v("249")]),n("br"),n("span",{staticClass:"line-number"},[s._v("250")]),n("br"),n("span",{staticClass:"line-number"},[s._v("251")]),n("br"),n("span",{staticClass:"line-number"},[s._v("252")]),n("br"),n("span",{staticClass:"line-number"},[s._v("253")]),n("br"),n("span",{staticClass:"line-number"},[s._v("254")]),n("br"),n("span",{staticClass:"line-number"},[s._v("255")]),n("br"),n("span",{staticClass:"line-number"},[s._v("256")]),n("br"),n("span",{staticClass:"line-number"},[s._v("257")]),n("br"),n("span",{staticClass:"line-number"},[s._v("258")]),n("br"),n("span",{staticClass:"line-number"},[s._v("259")]),n("br"),n("span",{staticClass:"line-number"},[s._v("260")]),n("br"),n("span",{staticClass:"line-number"},[s._v("261")]),n("br"),n("span",{staticClass:"line-number"},[s._v("262")]),n("br"),n("span",{staticClass:"line-number"},[s._v("263")]),n("br"),n("span",{staticClass:"line-number"},[s._v("264")]),n("br"),n("span",{staticClass:"line-number"},[s._v("265")]),n("br"),n("span",{staticClass:"line-number"},[s._v("266")]),n("br"),n("span",{staticClass:"line-number"},[s._v("267")]),n("br"),n("span",{staticClass:"line-number"},[s._v("268")]),n("br"),n("span",{staticClass:"line-number"},[s._v("269")]),n("br"),n("span",{staticClass:"line-number"},[s._v("270")]),n("br"),n("span",{staticClass:"line-number"},[s._v("271")]),n("br"),n("span",{staticClass:"line-number"},[s._v("272")]),n("br"),n("span",{staticClass:"line-number"},[s._v("273")]),n("br"),n("span",{staticClass:"line-number"},[s._v("274")]),n("br"),n("span",{staticClass:"line-number"},[s._v("275")]),n("br"),n("span",{staticClass:"line-number"},[s._v("276")]),n("br"),n("span",{staticClass:"line-number"},[s._v("277")]),n("br"),n("span",{staticClass:"line-number"},[s._v("278")]),n("br"),n("span",{staticClass:"line-number"},[s._v("279")]),n("br"),n("span",{staticClass:"line-number"},[s._v("280")]),n("br"),n("span",{staticClass:"line-number"},[s._v("281")]),n("br"),n("span",{staticClass:"line-number"},[s._v("282")]),n("br"),n("span",{staticClass:"line-number"},[s._v("283")]),n("br"),n("span",{staticClass:"line-number"},[s._v("284")]),n("br"),n("span",{staticClass:"line-number"},[s._v("285")]),n("br"),n("span",{staticClass:"line-number"},[s._v("286")]),n("br"),n("span",{staticClass:"line-number"},[s._v("287")]),n("br"),n("span",{staticClass:"line-number"},[s._v("288")]),n("br"),n("span",{staticClass:"line-number"},[s._v("289")]),n("br"),n("span",{staticClass:"line-number"},[s._v("290")]),n("br"),n("span",{staticClass:"line-number"},[s._v("291")]),n("br"),n("span",{staticClass:"line-number"},[s._v("292")]),n("br"),n("span",{staticClass:"line-number"},[s._v("293")]),n("br"),n("span",{staticClass:"line-number"},[s._v("294")]),n("br"),n("span",{staticClass:"line-number"},[s._v("295")]),n("br"),n("span",{staticClass:"line-number"},[s._v("296")]),n("br"),n("span",{staticClass:"line-number"},[s._v("297")]),n("br"),n("span",{staticClass:"line-number"},[s._v("298")]),n("br"),n("span",{staticClass:"line-number"},[s._v("299")]),n("br"),n("span",{staticClass:"line-number"},[s._v("300")]),n("br"),n("span",{staticClass:"line-number"},[s._v("301")]),n("br"),n("span",{staticClass:"line-number"},[s._v("302")]),n("br"),n("span",{staticClass:"line-number"},[s._v("303")]),n("br"),n("span",{staticClass:"line-number"},[s._v("304")]),n("br"),n("span",{staticClass:"line-number"},[s._v("305")]),n("br"),n("span",{staticClass:"line-number"},[s._v("306")]),n("br"),n("span",{staticClass:"line-number"},[s._v("307")]),n("br"),n("span",{staticClass:"line-number"},[s._v("308")]),n("br"),n("span",{staticClass:"line-number"},[s._v("309")]),n("br"),n("span",{staticClass:"line-number"},[s._v("310")]),n("br"),n("span",{staticClass:"line-number"},[s._v("311")]),n("br"),n("span",{staticClass:"line-number"},[s._v("312")]),n("br"),n("span",{staticClass:"line-number"},[s._v("313")]),n("br"),n("span",{staticClass:"line-number"},[s._v("314")]),n("br"),n("span",{staticClass:"line-number"},[s._v("315")]),n("br"),n("span",{staticClass:"line-number"},[s._v("316")]),n("br"),n("span",{staticClass:"line-number"},[s._v("317")]),n("br"),n("span",{staticClass:"line-number"},[s._v("318")]),n("br"),n("span",{staticClass:"line-number"},[s._v("319")]),n("br"),n("span",{staticClass:"line-number"},[s._v("320")]),n("br"),n("span",{staticClass:"line-number"},[s._v("321")]),n("br"),n("span",{staticClass:"line-number"},[s._v("322")]),n("br"),n("span",{staticClass:"line-number"},[s._v("323")]),n("br"),n("span",{staticClass:"line-number"},[s._v("324")]),n("br"),n("span",{staticClass:"line-number"},[s._v("325")]),n("br"),n("span",{staticClass:"line-number"},[s._v("326")]),n("br"),n("span",{staticClass:"line-number"},[s._v("327")]),n("br"),n("span",{staticClass:"line-number"},[s._v("328")]),n("br"),n("span",{staticClass:"line-number"},[s._v("329")]),n("br"),n("span",{staticClass:"line-number"},[s._v("330")]),n("br"),n("span",{staticClass:"line-number"},[s._v("331")]),n("br"),n("span",{staticClass:"line-number"},[s._v("332")]),n("br"),n("span",{staticClass:"line-number"},[s._v("333")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);