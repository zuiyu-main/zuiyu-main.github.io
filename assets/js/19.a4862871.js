(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{430:function(v,_,c){"use strict";c.r(_);var e=c(2),a=Object(e.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[_("img",{attrs:{src:"Elasticsearch%E4%B8%AD%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.assets%5Cimage-20230716170600919.png",alt:"image-20230716170600919"}})]),v._v(" "),_("p",[_("code",[v._v("Elasticsearch")]),v._v("是一种流行的搜索引擎和分布式文档存储解决方案，它的高效性能和可伸缩性使其成为许多应用程序的首选存储引擎。在工作中，优化"),_("code",[v._v("Elasticsearch")]),v._v("的检索性能是一个非常重要的任务，可以大大提高应用程序的响应速度和用户体验。下面我们将讨论如何优化"),_("code",[v._v("Elasticsearch")]),v._v("的检索性能，以及如何处理大文本文档。")]),v._v(" "),_("h1",{attrs:{id:"一、确保良好的硬件和网络性能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#一、确保良好的硬件和网络性能"}},[v._v("#")]),v._v(" 一、确保良好的硬件和网络性能")]),v._v(" "),_("p",[_("code",[v._v("Elasticsearch")]),v._v("的性能受到硬件和网络等多个因素的影响。因此，在优化检索性能之前，要确保服务器硬件和网络性能足够好。尽可能使用高速的网络连接和SSD硬盘，这样可以显著减少搜索响应时间。")]),v._v(" "),_("h1",{attrs:{id:"二、优化elasticsearch的查询语句"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#二、优化elasticsearch的查询语句"}},[v._v("#")]),v._v(" 二、优化Elasticsearch的查询语句")]),v._v(" "),_("p",[_("code",[v._v("Elasticsearch")]),v._v("的查询语句是影响性能的关键因素之一。查询语句越复杂，性能就越低。因此，可以通过以下几种方式来优化查询语句：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("尽量使用简单的查询语句，避免使用复杂的正则表达式、通配符查询等。")])]),v._v(" "),_("li",[_("p",[v._v("使用过滤器查询（"),_("code",[v._v("filter query")]),v._v("）替代普通查询（"),_("code",[v._v("bool query")]),v._v("），可以显著提高性能。")])]),v._v(" "),_("li",[_("p",[v._v("将查询结果限制为必要的字段，避免返回不必要的数据。")])]),v._v(" "),_("li",[_("p",[v._v("避免使用远程互联网数据，提高查询速度。")])])]),v._v(" "),_("h1",{attrs:{id:"三、优化elasticsearch的索引"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#三、优化elasticsearch的索引"}},[v._v("#")]),v._v(" 三、优化Elasticsearch的索引")]),v._v(" "),_("p",[_("code",[v._v("Elasticsearch")]),v._v("的索引是另一个影响性能的关键因素。以下是一些优化索引的方法：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("将索引设置为只读，可以提高索引的读取速度。")])]),v._v(" "),_("li",[_("p",[v._v("合理设置分片和副本，可以提高索引的并行性和可靠性。")])]),v._v(" "),_("li",[_("p",[v._v("只为必要的字段创建索引，避免创建不必要的索引。")])]),v._v(" "),_("li",[_("p",[v._v("定期合并段（"),_("code",[v._v("merge segments")]),v._v("）来减少磁盘碎片和优化索引性能。")])])]),v._v(" "),_("h1",{attrs:{id:"四、合理设置elasticsearch的内存阈值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四、合理设置elasticsearch的内存阈值"}},[v._v("#")]),v._v(" 四、合理设置Elasticsearch的内存阈值")]),v._v(" "),_("p",[_("code",[v._v("Elasticsearch")]),v._v("使用"),_("code",[v._v("Java")]),v._v("虚拟机（"),_("code",[v._v("JVM")]),v._v("）来运行，因此可以通过设置"),_("code",[v._v("JVM")]),v._v("内存大小来优化性能。一般来说，将"),_("code",[v._v("JVM")]),v._v("内存设置为可用物理内存的一半比较合适，但是如果内存阈值设置过大，可能会导致"),_("code",[v._v("JVM")]),v._v("崩溃或性能下降。如果遇到内存阈值超过设置的情况，"),_("code",[v._v("Elasticsearch")]),v._v("会默认将大文本文档拆分为多个小文档进行索引和查询，以避免内存溢出和性能下降问题。")]),v._v(" "),_("p",[v._v("综上所述，优化"),_("code",[v._v("Elasticsearch")]),v._v("的检索性能需要综合考虑硬件、网络、查询语句、索引和内存等多个因素。通过优化这些因素，可以显著提高"),_("code",[v._v("Elasticsearch")]),v._v("的检索性能和响应速度，从而提高应用程序的用户体验。")]),v._v(" "),_("h1",{attrs:{id:"五、大文件处理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#五、大文件处理"}},[v._v("#")]),v._v(" 五、大文件处理")]),v._v(" "),_("p",[v._v("现在有这么个场景，我有一个文件，大小"),_("code",[v._v("2g")]),v._v("，我读取这"),_("code",[v._v("2g")]),v._v("的文本内容保存到"),_("code",[v._v("elasticsearch")]),v._v("的一个"),_("code",[v._v("content")]),v._v("字段中，这个"),_("code",[v._v("content")]),v._v("字段是"),_("code",[v._v("text")]),v._v("类型")]),v._v(" "),_("p",[v._v("当将"),_("code",[v._v("Elasticsearch")]),v._v("的"),_("code",[v._v("JVM")]),v._v("内存最大设置为"),_("code",[v._v("4GB")]),v._v("时，就可以将整个"),_("code",[v._v("2GB")]),v._v("的文本内容读取到内存中，然后将其存储到"),_("code",[v._v("Elasticsearch")]),v._v("的"),_("code",[v._v("content")]),v._v("字段中。由于"),_("code",[v._v("JVM")]),v._v("内存设置为"),_("code",[v._v("4GB")]),v._v("，"),_("code",[v._v("Elasticsearch")]),v._v("可以使用的最大内存为"),_("code",[v._v("4GB")]),v._v("，在索引和查询过程中都可以充分利用这"),_("code",[v._v("4GB")]),v._v("的内存来提高性能。")]),v._v(" "),_("p",[v._v("当将"),_("code",[v._v("Elasticsearch")]),v._v("的"),_("code",[v._v("JVM")]),v._v("内存最大设置为"),_("code",[v._v("2GB")]),v._v("时，就不能将整个"),_("code",[v._v("2GB")]),v._v("的文本内容读取到内存中。在将文本内容存储到"),_("code",[v._v("Elasticsearch")]),v._v("的"),_("code",[v._v("content")]),v._v("字段中时，"),_("code",[v._v("Elasticsearch")]),v._v("会将文本内容分成多个小块进行索引和存储，每个小块的大小取决于"),_("code",[v._v("Elasticsearch")]),v._v("的分片大小、文档段大小等因素。因此，在查询时，"),_("code",[v._v("Elasticsearch")]),v._v("需要从多个小块中读取数据并进行组合，这可能会影响查询性能。如果文本内容的块数太多，查询性能可能会显著下降。")]),v._v(" "),_("ul",[_("li",[v._v("分片大小和文档段大小")])]),v._v(" "),_("p",[v._v("文本内容在"),_("code",[v._v("Elasticsearch")]),v._v("中被拆分成多个小块的大小取决于两个因素：分片大小和文档段大小。")]),v._v(" "),_("p",[v._v("分片大小是指在创建索引时将一个索引分成多个分片，每个分片可以存储一部分文档。默认情况下，"),_("code",[v._v("Elasticsearch")]),v._v("会将索引分成5个分片。每个分片都是一个独立的"),_("code",[v._v("Lucene")]),v._v("索引，可以在不同的节点上分布式存储。如果索引较大，可以增加分片数以提高查询性能和可伸缩性。")]),v._v(" "),_("p",[v._v("文档段大小是指在"),_("code",[v._v("Lucene")]),v._v("中，每个分片都被划分为多个文档段（"),_("code",[v._v("segment")]),v._v("），每个文档段都是一个独立的倒排索引文件。默认情况下，"),_("code",[v._v("Elasticsearch")]),v._v("每隔30分钟就会合并一次文档段，以减少磁盘碎片和优化索引性能。文档段的大小可以通过调整合并策略来控制。")]),v._v(" "),_("ul",[_("li",[v._v("拆分块的处理")])]),v._v(" "),_("p",[v._v("在"),_("code",[v._v("Elasticsearch")]),v._v("中，文本内容被拆分成多个小块并不是保存在磁盘中的，而是保存在内存中的。每个小块是一个独立的"),_("code",[v._v("Lucene")]),v._v("文档，可以通过分片和文档段来存储和管理。当对文本内容进行查询时，"),_("code",[v._v("Elasticsearch")]),v._v("会从多个小块中读取数据并进行组合，以返回查询结果。")]),v._v(" "),_("p",[v._v("对于一个大小为"),_("code",[v._v("2GB")]),v._v("的文本，当将"),_("code",[v._v("Elasticsearch")]),v._v("的"),_("code",[v._v("JVM")]),v._v("内存最大设置为"),_("code",[v._v("2GB")]),v._v("时，"),_("code",[v._v("Elasticsearch")]),v._v("无法将整个文本读入到内存中，因此会将文本拆分为多个小块，并将它们存储在磁盘上的多个"),_("code",[v._v("Lucene")]),v._v("文档中。当进行查询时，"),_("code",[v._v("Elasticsearch")]),v._v("会从磁盘中读取这些小块，并在内存中对它们进行排序、过滤和组合，然后返回查询结果。由于在查询过程中，"),_("code",[v._v("Elasticsearch")]),v._v("需要将多个小块读入内存并进行组合，因此查询性能可能会受到一定的影响。")]),v._v(" "),_("p",[v._v("当"),_("code",[v._v("Elasticsearch")]),v._v("需要读取多个小块进行查询时，它并不会一次性将所有的小块全部加入内存中，而是采用分批读取的方式，以避免内存不足的情况发生。具体来说，当进行查询时，"),_("code",[v._v("Elasticsearch")]),v._v("会首先从磁盘中读取一部分小块到内存中，以进行排序、过滤和组合等操作，然后将处理过的结果再与后面的小块进行组合。这样，"),_("code",[v._v("Elasticsearch")]),v._v("可以在不占用过多内存的情况下完成查询操作。")]),v._v(" "),_("p",[v._v("假如"),_("code",[v._v("1000")]),v._v("个文本块，在合并到"),_("code",[v._v("800")]),v._v("个文本块时，"),_("code",[v._v("Elasticsearch")]),v._v("在查询过程中发现内存不足时，会根据查询优先级和内存使用情况等因素自动进行"),_("code",[v._v("GC")]),v._v("（垃圾回收），以释放一部分内存。如果"),_("code",[v._v("GC")]),v._v("之后仍然无法满足查询的内存需求，"),_("strong",[v._v("Elasticsearch会将查询暂停")]),v._v("，等待内存空间释放后再继续执行查询操作。")])])}),[],!1,null,null,null);_.default=a.exports}}]);